
 <!DOCTYPE html>
 <html lang="tr">


<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" /><meta name="generator" content="Docutils 0.17.1: http://docutils.sourceforge.net/" />
<meta content="Bu bölümde işleçleri inceleyeceğiz." name="description" />
<meta content="python, işlec, bool, aritmetik, True, False, eşit, eşit değil, karşılaştırma, değer atama, aitlik, kimlik , walrus" name="keywords" />

    <title>İşleçler</title>
    <link rel="stylesheet" type="text/css" href="_static/pygments.css" />
    <link rel="stylesheet" type="text/css" href="_static/epub.css" />
<!--[if lte IE 6]>
<link rel="stylesheet" href="_static/ie6.css" type="text/css" media="screen" charset="utf-8" />
<![endif]-->

  </head><body>
<div class='header'><a href='https://yazbel.com'><img src="_static/logo.png"></a></div>

<ul class='navbar'>
    <li class="forum"><a href="http://forum.yazbel.com">forum</a></li>
    <li><a href="#"><del>pdf</a></li>
    <li><a href="#"><del>epub</a></li>
    <li><a href="#"><del>html</a></li>
</ul>



    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            

  <section id="islecler">
<h1>İşleçler</h1>
<p>Bu bölümde, aslında pek de yabancısı olmadığımız ve hatta önceki derslerimizde
üstünkörü de olsa değindiğimiz bir konuyu çok daha ayrıntılı bir şekilde ele
alacağız. Burada anlatacağımız konu size yer yer sıkıcı gelebilir. Ancak bu
konuyu hakkıyla öğrenmenizin, programcılık maceranız açısından hayati önemde
olduğunu rahatlıkla söyleyebilirim.</p>
<p>Gelelim konumuza…</p>
<p>Bu bölümün konusu işleçler. Peki nedir bu ‘işleç’ denen şey?</p>
<p>İngilizce’de <em>operator</em> adı verilen işleçler, sağında ve solunda bulunan
değerler arasında bir ilişki kuran işaretlerdir. Bir işlecin sağında ve solunda
bulunan değerlere ise işlenen (<em>operand</em>) adı veriyoruz.</p>
<div class="admonition note">
<p class="admonition-title">Not</p>
<p>Türkçede işleç yerine operatör, işlenen yerine de operant dendiğine
tanık olabilirsiniz.</p>
</div>
<p>Biz bu bölümde işleçleri altı başlık altında inceleyeceğiz:</p>
<blockquote>
<div><ol class="arabic simple">
<li><p>Aritmetik İşleçler</p></li>
<li><p>Karşılaştırma İşleçleri</p></li>
<li><p>Bool İşleçleri</p></li>
<li><p>Değer Atama İşleçleri</p></li>
<li><p>Aitlik İşleçleri</p></li>
<li><p>Kimlik İşleçleri</p></li>
</ol>
</div></blockquote>
<p>Gördüğünüz gibi, işlememiz gereken konu çok, gitmemiz gereken yol uzun. O halde
hiç vakit kaybetmeden, aritmetik işleçlerle yolculuğumuza başlayalım.</p>
<section id="aritmetik-islecler">
<h2>Aritmetik İşleçler</h2>
<p>Dedik ki, sağında ve solunda bulunan değerler arasında bir ilişki kuran
işaretlere işleç (<em>operator</em>) adı verilir. Önceki derslerimizde temel işleçlerin
bazılarını öğrenmiştik. İsterseniz bunları şöyle bir hatırlayalım:</p>
<blockquote>
<div><table class="docutils align-default">
<colgroup>
<col style="width: 40%" />
<col style="width: 60%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><cite>+</cite></p></td>
<td><p>toplama</p></td>
</tr>
<tr class="row-even"><td><p><cite>-</cite></p></td>
<td><p>çıkarma</p></td>
</tr>
<tr class="row-odd"><td><p><cite>*</cite></p></td>
<td><p>çarpma</p></td>
</tr>
<tr class="row-even"><td><p><cite>/</cite></p></td>
<td><p>bölme</p></td>
</tr>
<tr class="row-odd"><td><p><cite>**</cite></p></td>
<td><p>kuvvet</p></td>
</tr>
</tbody>
</table>
</div></blockquote>
<p>Bu işleçlere aritmetik işleçler adı verilir. Aritmetik işleçler; matematikte
kullanılan ve sayılarla aritmetik işlemler yapmamızı sağlayan yardımcı
araçlardır.</p>
<p>Dilerseniz bu tanımı bir örnekle somutlaştıralım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">45</span> <span class="o">+</span> <span class="mi">33</span>

<span class="go">78</span>
</pre></div>
</div>
<p>Burada <cite>45</cite> ve <cite>33</cite> değerlerine işlenen (<em>operand</em>) adı verilir. Bu iki değer
arasında yer alan <cite>+</cite> işareti ise bir işleçtir (<em>operator</em>). Dikkat ederseniz
<cite>+</cite> işleci <cite>45</cite> ve <cite>33</cite> adlı işlenenler arasında bir toplama ilişkisi kuruyor.</p>
<p>Bir örnek daha verelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">23</span> <span class="o">*</span> <span class="mi">46</span>

<span class="go">1058</span>
</pre></div>
</div>
<p>Burada da <cite>23</cite> ve <cite>46</cite> değerleri birer işlenendir. Bu iki değer arasında yer
alan <cite>*</cite> işareti ise, işlenenler arasında bir çarpma ilişkisi kuran bir
işleçtir.</p>
<p>Ancak bir noktaya özellikle dikkatinizi çekmek istiyorum. Daha önceki
derslerimizde de değindiğimiz gibi, <cite>+</cite> ve <cite>*</cite> işleçleri Python’da birden fazla
anlama gelir. Örneğin yukarıdaki örnekte <cite>+</cite> işleci, işlenenler arasında bir
toplama ilişkisi kuruyor. Ama aşağıdaki durum biraz farklıdır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="s2">&quot;istihza&quot;</span> <span class="o">+</span> <span class="s2">&quot;.com&quot;</span>

<span class="go">&#39;istihza.com&#39;</span>
</pre></div>
</div>
<p>Burada <cite>+</cite> işleci işlenenler (<cite>“istihza”</cite> ve <cite>“.com”</cite>) arasında bir birleştirme
ilişkisi kuruyor.</p>
<p>Tıpkı <cite>+</cite> işlecinde olduğu gibi, <cite>*</cite> işleci de Python’da birden fazla anlama
gelir. Bu işlecin, çarpma ilişkisi kurma işlevi dışında tekrar etme ilişkisi
kurma işlevi de vardır. Yani:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="s2">&quot;hızlı &quot;</span> <span class="o">*</span> <span class="mi">2</span>

<span class="go">&#39;hızlı hızlı &#39;</span>
</pre></div>
</div>
<p>…veya:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="s2">&quot;-&quot;</span> <span class="o">*</span> <span class="mi">30</span>

<span class="go">&#39;------------------------------&#39;</span>
</pre></div>
</div>
<p>Burada <cite>*</cite> işlecinin, sayılar arasında çarpma işlemi yapmak dışında bir görev
üstlendiğini görüyoruz.</p>
<p>Python’da bu tür farklar, yazacağınız programın sağlıklı çalışabilmesi açısından
büyük önem taşır. O yüzden bu tür farklara karşı her zaman uyanık olmamız
gerekiyor.</p>
<p><cite>+</cite> ve <cite>*</cite> işleçlerinin aksine <cite>/</cite> ve <cite>-</cite> işleçleri ise işlenenler arasında
sadece bölme ve çıkarma ilişkisi kurar. Bu işleçler tek işlevlidir:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">25</span> <span class="o">/</span> <span class="mi">4</span>

<span class="go">6.25</span>

<span class="gp">&gt;&gt;&gt; </span><span class="mi">10</span> <span class="o">-</span> <span class="mi">5</span>

<span class="go">5</span>
</pre></div>
</div>
<p>Önceki derslerde gördüğümüz ve yukarıda da tekrar ettiğimiz dört adet temel
aritmetik işlece şu iki aritmetik işleci de ekleyelim:</p>
<blockquote>
<div><table class="docutils align-default">
<colgroup>
<col style="width: 18%" />
<col style="width: 82%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><cite>%</cite></p></td>
<td><p>modülüs</p></td>
</tr>
<tr class="row-even"><td><p><cite>//</cite></p></td>
<td><p>taban bölme</p></td>
</tr>
</tbody>
</table>
</div></blockquote>
<p>İlk önce modülüsün ne olduğunu ve ne işe yaradığını anlamaya çalışalım.</p>
<p>Şu bölme işlemine bir bakın:</p>
<img alt="_images/bolme.png" class="align-center" src="_images/bolme.png" />
<p>Burada <cite>02</cite> sayısı bölme işleminin kalanıdır. İşte modülüs denen işleç de bölme
işleminden kalan bu değeri gösterir. Yani:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">30</span> <span class="o">%</span> <span class="mi">4</span>

<span class="go">2</span>
</pre></div>
</div>
<p>Gördüğünüz gibi modülüs işleci (<cite>%</cite>) gerçekten de bölme işleminden kalan sayıyı
gösteriyor… Peki bu bilgi ne işimize yarar?</p>
<p>Mesela bu bilgiyi kullanarak bir sayının tek mi yoksa çift mi olduğunu tespit
edebiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">sayı</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Bir sayı girin: &quot;</span><span class="p">))</span>

<span class="k">if</span> <span class="n">sayı</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Girdiğiniz sayı bir çift sayıdır.&quot;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Girdiğiniz sayı bir tek sayıdır.&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Eğer bir sayı <cite>2</cite>’ye bölündüğünde kalan değer <cite>0</cite> ise o sayı çifttir. Aksi halde
o sayı tektir. Mesela:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">14</span> <span class="o">%</span> <span class="mi">2</span>

<span class="go">0</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, bir çift sayı olan <cite>14</cite>’ü <cite>2</cite>’ye böldüğümüzde kalan sayı <cite>0</cite>
oluyor. Çünkü çift sayılar <cite>2</cite>’ye tam bölünürler.</p>
<p>Bir de şuna bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">15</span> <span class="o">%</span> <span class="mi">2</span>

<span class="go">1</span>
</pre></div>
</div>
<p>Bir tek sayı olan <cite>15</cite> ise <cite>2</cite>’ye bölündüğünde kalan sayı <cite>1</cite> oluyor. Yani <cite>15</cite>
sayısı <cite>2</cite>’ye tam bölünmüyor. Bu bilgiden yola çıkarak 15 sayısının bir tek sayı
olduğunu söyleyebiliyoruz.</p>
<p>Bir sayının tek mi yoksa çift mi olduğunu tespit etme işlemini küçümsememenizi
tavsiye ederim. Bir sayının tek mi yoksa çift mi olduğu bilgisinin, arayüz
geliştirirken dahi işinize yarayacağından emin olabilirsiniz.</p>
<p>Elbette modülüs işlecini bir sayının yalnızca <cite>2</cite>’ye tam bölünüp bölünmediğini
denetlemek için kullanmıyoruz. Bu işleci kullanarak herhangi bir sayının
herhangi bir sayıya tam bölünüp bölünmediğini de denetleyebilirsiniz. Örneğin:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">45</span> <span class="o">%</span> <span class="mi">4</span>

<span class="go">1</span>

<span class="gp">&gt;&gt;&gt; </span><span class="mi">36</span> <span class="o">%</span> <span class="mi">9</span>

<span class="go">0</span>
</pre></div>
</div>
<p>Bu bilgiyi kullanarak mesela şöyle bir program yazabilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">bölünen</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Bir sayı girin: &quot;</span><span class="p">))</span>
<span class="n">bölen</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Bir sayı daha girin: &quot;</span><span class="p">))</span>

<span class="n">şablon</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">{}</span><span class="s2"> sayısı </span><span class="si">{}</span><span class="s2"> sayısına tam&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">bölünen</span><span class="p">,</span> <span class="n">bölen</span><span class="p">)</span>

<span class="k">if</span> <span class="n">bölünen</span> <span class="o">%</span> <span class="n">bölen</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">şablon</span><span class="p">,</span> <span class="s2">&quot;bölünüyor!&quot;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">şablon</span><span class="p">,</span> <span class="s2">&quot;bölünmüyor!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Programımız, kullanıcının girdiği ilk sayının ikinci sayıya tam bölünüp
bölünmediğini hesaplıyor ve sonuca göre kullanıcıyı bilgilendiriyor. Bu kodlarda
özellikle şu satıra dikkat edin:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">bölünen</span> <span class="o">%</span> <span class="n">bölen</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
    <span class="o">...</span>
</pre></div>
</div>
<p>Programımızın temelini bu kod oluşturuyor. Çünkü bir sayının bir sayıya tam
bölünüp bölünmediğini bu kodla belirliyoruz. Eğer bir sayı başka bir sayıya
bölündüğünde kalan değer, yani modülüs <cite>0</cite> ise, o sayı öbür sayıya tam bölünüyor
demektir.</p>
<p>Ayrıca bir sayının son basamağını elde etmek için de modülüsten
yararlanabilirsiniz. Herhangi bir tamsayı <cite>10</cite>’a bölündüğünde kalan (yani
modülüs), bölünen sayının son basamağı olacaktır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">65</span> <span class="o">%</span> <span class="mi">10</span>

<span class="go">5</span>

<span class="gp">&gt;&gt;&gt; </span><span class="mi">543</span> <span class="o">%</span> <span class="mi">10</span>

<span class="go">3</span>
</pre></div>
</div>
<p>Programlama tecrübeniz arttıkça, aslında modülüsün ne kadar faydalı bir araç
olduğunu kendi gözlerinizle göreceksiniz.</p>
<p>Modülüs işlecini örnekler eşliğinde ayrıntılı bir şekilde incelediğimize göre
sıra geldi taban bölme işlecini açıklamaya…</p>
<p>Öncelikle şu örneği inceleyelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">5</span> <span class="o">/</span> <span class="mi">2</span>

<span class="go">2.5</span>
</pre></div>
</div>
<p>Burada, bildiğimiz bölme işlecini (<cite>/</cite>) kullanarak basit bir bölme işlemi
yaptık. Elde ettiğimiz sonuç doğal olarak <cite>2.5</cite>.</p>
<p>Matematikte bölme işleminin sonucunun kesirli olması durumuna ‘kesirli bölme’
adı verilir. Bunun tersi ise tamsayılı bölme veya taban bölmedir. Eğer herhangi
bir sebeple kesirli bölme işlemi değil de taban bölme işlemi yapmanız gerekirse
<cite>//</cite> işlecinden yararlanabilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">5</span> <span class="o">//</span> <span class="mi">2</span>

<span class="go">2</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <cite>//</cite> işleci sayesinde bölme işleminin sonucu kesirli değil,
tamsayı olarak elde ediliyor.</p>
<p>Yukarıda yaptığımız taban bölme işlemi şununla aynı anlama gelir:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">int</span><span class="p">(</span><span class="mi">5</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>

<span class="go">2</span>
</pre></div>
</div>
<p>Daha açık ifade etmemiz gerekirse:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">/</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span>

<span class="go">2.5</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">2</span>
</pre></div>
</div>
<p>Burada olan şu: <code class="docutils literal notranslate"><span class="pre">5</span> <span class="pre">/</span> <span class="pre">2</span></code> işleminin sonucu bir kayan noktalı sayıdır (<cite>2.5</cite>).
Bunu şu şekilde teyit edebiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">/</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">type</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">&lt;class &#39;float&#39;&gt;</span>
</pre></div>
</div>
<p>Buradaki <cite>float</cite> çıktısının <em>floating point number</em>, yani kayan noktalı sayı
anlamına geldiğini biliyorsunuz.</p>
<p>Bu kayan noktalı sayının sadece tabanını elde etmek için bu sayıyı tamsayıya
(<em>integer</em>) çevirmemiz yeterli olacaktır. Yani:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">int</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">2</span>
</pre></div>
</div>
<p>Bu arada yeri gelmişken <code class="docutils literal notranslate"><span class="pre">round()</span></code> adlı bir gömülü fonksiyondan bahsetmeden
geçmeyelim. Eğer bir sayının değerini yuvarlamanız gerekirse <code class="docutils literal notranslate"><span class="pre">round()</span></code>
fonksiyonundan yararlanabilirsiniz. Bu fonksiyon şöyle kullanılır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">round</span><span class="p">(</span><span class="mf">2.55</span><span class="p">)</span>

<span class="go">3</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <code class="docutils literal notranslate"><span class="pre">round()</span></code> fonksiyonuna parametre olarak bir sayı veriyoruz.
Bu fonksiyon da bize o sayının yuvarlanmış halini döndürüyor. Bu fonksiyonu
kullanarak yuvarlanacak sayının noktadan sonraki hassasiyetini de
belirleyebilirsiniz. Örneğin:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">round</span><span class="p">(</span><span class="mf">2.55</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>

<span class="go">2.5</span>
</pre></div>
</div>
<p>Burada ikinci parametre olarak <cite>1</cite> sayısını verdiğimiz için, noktadan sonraki
bir basamak görüntüleniyor. Bir de şuna bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">round</span><span class="p">(</span><span class="mf">2.68</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>

<span class="go">2.7</span>
</pre></div>
</div>
<p>Burada da yuvarlama işlemi yapılırken noktadan sonra bir basamak korunuyor. Eğer
<cite>1</cite> sayısı yerine <cite>2</cite> sayısını kullanırsanız, yukarıdaki örnek şu çıktıyı
verir:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">round</span><span class="p">(</span><span class="mf">2.68</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="go">2.68</span>
</pre></div>
</div>
<p><code class="docutils literal notranslate"><span class="pre">round()</span></code> fonksiyonunun çalışma prensibini anlamak için kendi kendinize
örnekler yapabilirsiniz.</p>
<p>Şimdiye kadar öğrendiğimiz ve yukarıdaki tabloda andığımız bir başka aritmetik
işleç de kuvvet işleci (<cite>**</cite>) idi. Mesela bu işleci kullanarak bir sayının
karesini hesaplayabileceğimizi biliyorsunuz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">25</span> <span class="o">**</span> <span class="mi">2</span>

<span class="go">625</span>
</pre></div>
</div>
<p>Bir sayının <cite>2.</cite> kuvveti o sayının karesidir. Bir sayının <cite>0.5.</cite> kuvveti ise o
sayının kareköküdür:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="mi">625</span> <span class="o">**</span> <span class="mf">0.5</span>

<span class="go">25.0</span>
</pre></div>
</div>
<p>Bu arada, eğer karekökün kayan noktalı sayı cinsinden olması hoşunuza
gitmediyse, bu sayıyı <code class="docutils literal notranslate"><span class="pre">int()</span></code> fonksiyonu ile tam sayıya çevirebileceğinizi
biliyorsunuz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">int</span><span class="p">(</span><span class="mi">625</span> <span class="o">**</span> <span class="mf">0.5</span><span class="p">)</span>

<span class="go">25</span>
</pre></div>
</div>
<p>Kuvvet hesaplamaları için <cite>**</cite> işlecinin yanısıra <code class="docutils literal notranslate"><span class="pre">pow()</span></code> adlı bir
fonksiyondan da yararlanabileceğimizi öğrenmiştik:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">pow</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>

<span class="go">625</span>
</pre></div>
</div>
<p>Bildiğiniz gibi <code class="docutils literal notranslate"><span class="pre">pow()</span></code> fonksiyonu aslında toplam üç parametre alabiliyor:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">pow</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>

<span class="go">0</span>
</pre></div>
</div>
<p>Bu işlemin şununla aynı anlama geliyor:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="p">(</span><span class="mi">25</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span> <span class="o">%</span> <span class="mi">5</span>

<span class="go">0</span>
</pre></div>
</div>
<p>Yani <code class="docutils literal notranslate"><span class="pre">pow(25,</span> <span class="pre">2,</span> <span class="pre">5)</span></code> gibi bir komut verdiğimizde, <cite>25</cite> sayısının <cite>2.</cite>
kuvvetini alıp, elde ettiğimiz sayının <cite>5</cite>’e bölünmesinden kalan sayıyı
hesaplamış oluyoruz.</p>
<p>Böylece aritmetik işleçleri tamamlamış olduk. Artık karşılaştırma işleçlerini
inceleyebiliriz.</p>
</section>
<section id="karsilastirma-islecleri">
<h2>Karşılaştırma İşleçleri</h2>
<p>Adından da anlaşılacağı gibi, karşılaştırma işleçleri, işlenenler (<em>operands</em>)
arasında bir karşılaştırma ilişkisi kuran işleçlerdir. Bu işleçleri şöyle
sıralayabiliriz:</p>
<blockquote>
<div><table class="docutils align-default">
<colgroup>
<col style="width: 17%" />
<col style="width: 83%" />
</colgroup>
<tbody>
<tr class="row-odd"><td><p><cite>==</cite></p></td>
<td><p>eşittir</p></td>
</tr>
<tr class="row-even"><td><p><cite>!=</cite></p></td>
<td><p>eşit değildir</p></td>
</tr>
<tr class="row-odd"><td><p><cite>&gt;</cite></p></td>
<td><p>büyüktür</p></td>
</tr>
<tr class="row-even"><td><p><cite>&lt;</cite></p></td>
<td><p>küçüktür</p></td>
</tr>
<tr class="row-odd"><td><p><cite>&gt;=</cite></p></td>
<td><p>büyük eşittir</p></td>
</tr>
<tr class="row-even"><td><p><cite>&lt;=</cite></p></td>
<td><p>küçük eşittir</p></td>
</tr>
</tbody>
</table>
</div></blockquote>
<p>Bu işleçlerin hiçbiri size yabancı değil, zira bunların hepsini aslında daha
önceki derslerde verdiğimiz örneklerde kullanmıştık. Burada da bunlarla ilgili
basit bir örnek vererek yolumuza devam edelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">parola</span> <span class="o">=</span> <span class="s2">&quot;xyz05&quot;</span>

<span class="n">soru</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;parolanız: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">soru</span> <span class="o">==</span> <span class="n">parola</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;doğru parola!&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">!=</span> <span class="n">parola</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;yanlış parola!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada <cite>soru</cite> değişkeniyle kullanıcıdan alınan verinin, programın başında
tanımladığımız <cite>parola</cite> değişkeninin değerine eşit olup olmadığını sorguluyoruz.
Buna göre, eğer kullanıcıdan gelen veri parolayla eşleşiyorsa (<code class="docutils literal notranslate"><span class="pre">if</span> <span class="pre">soru</span> <span class="pre">==</span>
<span class="pre">parola</span></code>), kullanıcıyı parolanın doğru olduğu konusunda bilgilendiriyoruz
(<code class="docutils literal notranslate"><span class="pre">print(&quot;doğru</span> <span class="pre">parola!&quot;)</span></code>). Ama eğer kullanıcıdan gelen veri parolayla
eşleşmiyorsa (<code class="docutils literal notranslate"><span class="pre">elif</span> <span class="pre">soru</span> <span class="pre">!=</span> <span class="pre">parola</span></code>), o zaman da kullanıcıya parolanın yanlış
olduğunu bildiriyoruz (<code class="docutils literal notranslate"><span class="pre">print(&quot;yanlış</span> <span class="pre">parola!&quot;)</span></code>).</p>
<p>Yukarıdaki örnekte <cite>==</cite> (eşittir) ve <cite>!=</cite> (eşit değildir) işleçlerinin
kullanımını örneklendirdik. Öteki karşılaştırma işleçlerinin de nasıl
kullanıldığını biliyorsunuz. Basit bir örnek verelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">sayı</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;sayı: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="nb">int</span><span class="p">(</span><span class="n">sayı</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;sayı 100 veya 100&#39;den küçük&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="nb">int</span><span class="p">(</span><span class="n">sayı</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">100</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;sayı 100 veya 100&#39;den büyük&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Böylece karşılaştırma işleçlerini de incelemiş olduk. O halde gelelim bool
işleçlerine…</p>
</section>
<section id="bool-islecleri">
<h2>Bool İşleçleri</h2>
<p>Bu bölümde bool işleçlerinden söz edeceğiz, ancak bool işleçlerine geçmeden önce
biraz bool kavramından bahsetmemiz yerinde olacaktır.</p>
<p>Nedir bu bool denen şey?</p>
<p>Bilgisayar bilimi iki adet değer üzerine kuruludur: <cite>1</cite> ve <cite>0</cite>. Yani sırasıyla
<cite>True</cite> ve <cite>False</cite>. Bilgisayar biliminde herhangi bir şeyin değeri ya <cite>True</cite>, ya
da <cite>False</cite>’tur. İşte bu <cite>True</cite> ve <cite>False</cite> olarak ifade edilen değerlere bool
değerleri adı verilir (George Boole adlı İngiliz matematikçi ve filozofun
adından). Türkçe olarak söylemek gerekirse, <cite>True</cite> değerinin karşılığı <cite>Doğru</cite>,
<cite>False</cite> değerinin karşılığı ise <cite>Yanlış</cite>’tır.</p>
<p>Örneğin:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
</pre></div>
</div>
<p>Burada <cite>a</cite> adlı bir değişken tanımladık. Bu değişkenin değeri <cite>1</cite>. Şimdi bu
değişkenin değerini sorgulayalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">1</span> <span class="c1">#a değeri 1&#39;e eşit mi?</span>

<span class="go">True</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <cite>a == 1</cite> sorgusu <cite>True</cite> (Doğru) çıktısı veriyor. Çünkü <cite>a</cite>
değişkeninin değeri gerçekten de <cite>1</cite>. Bir de şunu deneyelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">2</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Burada da <cite>a</cite> değişkeninin değerinin <cite>2</cite> sayısına eşdeğer olup olmadığını
sorguladık. <cite>a</cite> değişkeninin değeri <cite>2</cite> olmadığı için de Python bize <cite>False</cite>
(Yanlış) çıktısı verdi.</p>
<p>Gördüğünüz gibi, bool işleçleri herhangi bir ifadenin doğruluğunu veya
yanlışlığını sorgulamak için kullanılabiliyor. Buna göre, eğer bir sorgulamanın
sonucu doğru ise <cite>True</cite>, eğer yanlış ise <cite>False</cite> çıktısı alıyoruz.</p>
<p>Bool işleçleri sadece yukarıda verdiğimiz örneklerdeki gibi, salt bir
doğruluk-yanlışlık sorgulamaya yarayan araçlar değildir. Bilgisayar biliminde
her şeyin bir bool değeri vardır. Bununla ilgili genel kuralımız şu: <cite>0</cite> değeri
ve boş veri tipleri <cite>False</cite>’tur. Bunlar dışında kalan her şey ise <cite>True</cite>’dur.</p>
<p>Bu durumu <code class="docutils literal notranslate"><span class="pre">bool()</span></code> adlı özel bir fonksiyondan yararlanarak teyit edebiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="s2">&quot;elma&quot;</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="s2">&quot;     &quot;</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="s2">&quot;fdsdfsdg&quot;</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="s2">&quot;0&quot;</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>

<span class="go">False</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, gerçekten de <cite>0</cite> sayısının ve boş karakter dizilerinin bool
değeri <cite>False</cite>’tur. Geri kalan her şey ise <cite>True</cite>’dur.</p>
<div class="admonition note">
<p class="admonition-title">Not</p>
<p><cite>0</cite>’ın bir sayı, <cite>“0”</cite>’ın ise bir karakter dizisi olduğunu unutmayın.
Sayı olan <cite>0</cite>’ın bool değeri <cite>False</cite>’tur, ama karakter dizisi olan <cite>“0”</cite>’ın
değeri <cite>True</cite>’dur.</p>
</div>
<p>Yukarıdaki örneklere göre, içinde herhangi bir değer barındıran karakter
dizileri (<cite>0</cite> hariç) <cite>True</cite> çıktısı veriyor. Burada söylediğimiz şey bütün veri
tipleri için geçerlidir. Eğer herhangi bir veri tipi herhangi bir değer
içermiyorsa o veri tipi <cite>False</cite> çıktısı verir.</p>
<p>Peki bu bilgi bizim ne işimize yarar? Yani mesela boş veri tiplerinin <cite>False</cite>,
içinde bir veri barındıran veri tiplerinin ise <cite>True</cite> olması bizim için neden bu
kadar önemli? Bunu birazdan açıklayacağız. Ama önce isterseniz, bool değerleri
ile ilgili çok önemli bir konuya değinelim.</p>
<p>Belki kendiniz de farketmişsinizdir; bool değerleri Python’da koşul belirten
<code class="docutils literal notranslate"><span class="pre">if</span></code>, <code class="docutils literal notranslate"><span class="pre">elif</span></code> ve <code class="docutils literal notranslate"><span class="pre">else</span></code> deyimlerinin de temelini oluşturur. Şu örneği ele
alalım mesela:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">isim</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;İsminiz: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">isim</span> <span class="o">==</span> <span class="s2">&quot;Ferhat&quot;</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Ne güzel bir isim bu!&quot;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">isim</span><span class="p">,</span> <span class="s2">&quot;ismini pek sevmem!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada <code class="docutils literal notranslate"><span class="pre">if</span> <span class="pre">isim</span> <span class="pre">==</span> <span class="pre">&quot;Ferhat&quot;</span></code> dediğimizde, aslında Python’a şu emri vermiş
oluyoruz:</p>
<blockquote>
<div><p>Eğer <code class="docutils literal notranslate"><span class="pre">isim</span> <span class="pre">==</span> <span class="pre">&quot;Ferhat&quot;</span></code> ifadesi <cite>True</cite> ise…</p>
</div></blockquote>
<p>Bunu teyit etmek için şöyle bir kod yazabilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">isim</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;İsminiz: &quot;</span><span class="p">)</span>

<span class="nb">print</span><span class="p">(</span><span class="n">isim</span> <span class="o">==</span> <span class="s2">&quot;Ferhat&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Eğer burada kullanıcı ‘Ferhat’ ismini girecek olursa programımız <cite>True</cite> çıktısı
verir. Ama eğer kullanıcı başka bir isim girerse bu kez <cite>False</cite> çıktısını
alırız. İşte koşul bildiren deyimler, karar verme görevini, kendilerine verilen
ifadelerin bool değerlerine bakarak yerine getirir. Dolayısıyla yukarıdaki
örneği şu şekilde Türkçeye çevirebiliriz:</p>
<blockquote>
<div><p>Eğer <code class="docutils literal notranslate"><span class="pre">isim</span> <span class="pre">==</span> <span class="pre">&quot;Ferhat&quot;</span></code> ifadesinin bool değeri <cite>True</cite> ise, <cite>Ne güzel bir
isim bu!</cite> çıktısı ver! Ama eğer <code class="docutils literal notranslate"><span class="pre">isim</span> <span class="pre">==</span> <span class="pre">&quot;Ferhat&quot;</span></code> ifadesinin bool değeri
<cite>True</cite> dışında herhangi bir şey ise (yani <cite>False</cite> ise), <cite>… ismini pek
sevmem!</cite> çıktısı ver!</p>
</div></blockquote>
<p>Koşul bildiren deyimlerle bool değerleri arasındaki ilişkiyi daha iyi anlamak
için bir örnek daha verelim:</p>
<p>Hatırlarsanız içi boş veri tiplerinin bool değerinin her zaman <cite>False</cite> olacağını
söylemiştik. Yani:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Herhangi bir değere sahip veri tiplerinin bool değeri ise her zaman <cite>True</cite> olur
(<cite>0</cite> hariç):</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;gdfg&quot;</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">True</span>
</pre></div>
</div>
<p>İçi boş veri tiplerinin bool değerinin her zaman <cite>False</cite> olacağı bilgisini
kullanarak şöyle bir uygulama yazabiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">kullanıcı</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Kullanıcı adınız: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="nb">bool</span><span class="p">(</span><span class="n">kullanıcı</span><span class="p">)</span> <span class="o">==</span> <span class="kc">True</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Teşekkürler!&quot;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Kullanıcı adı alanı boş bırakılamaz!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada şöyle bir emir verdik:</p>
<blockquote>
<div><p>“Eğer <cite>kullanıcı</cite> değişkeninin bool değeri <cite>True</cite> ise <cite>Teşekkürler!</cite> çıktısı
ver! Değilse <cite>Kullanıcı adı alanı boş bırakılamaz!</cite> uyarısını göster!</p>
</div></blockquote>
<p>Eğer kullanıcı, kullanıcı adına herhangi bir şey yazdıktan sonra <cite>Enter</cite> tuşuna
basarsa <cite>kullanıcı</cite> değişkeni, kullanıcının girdiği değeri gösterecek ve böylece
<code class="docutils literal notranslate"><span class="pre">bool(kullanıcı)</span></code> komutu <cite>True</cite> çıktısı verecektir. Bu sayede de kodlarımızın
içindeki <code class="docutils literal notranslate"><span class="pre">if</span></code> bloğu çalışmaya başlayacaktır.</p>
<p>Ama eğer kullanıcı, kullanıcı adını yazmadan <cite>Enter</cite> tuşuna basarsa, <cite>kullanıcı</cite>
değişkeni boş kalacağı için (yani <code class="docutils literal notranslate"><span class="pre">kullanıcı</span> <span class="pre">=</span> <span class="pre">&quot;&quot;</span></code> gibi bir durum ortaya
çıkacağı için) <code class="docutils literal notranslate"><span class="pre">bool(kullanıcı)</span></code> komutu <cite>False</cite> çıktısı verecek ve böylece
<code class="docutils literal notranslate"><span class="pre">else</span></code> bloğu çalışacaktır.</p>
<p>Yalnız bu noktada şöyle bir uyarı yapalım. Yukarıdaki komutlar sözdizimi
açısından tamamen doğru olsa da, etrafta yukarıdakine benzer bir kullanımı pek
görmezsiniz. Aynı iş için genellikle şöyle bir şeyler yazılır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">kullanıcı</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Kullanıcı adınız: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">kullanıcı</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Teşekkürler!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <code class="docutils literal notranslate"><span class="pre">if</span> <span class="pre">bool(kullanıcı)</span> <span class="pre">==</span> <span class="pre">True:</span></code> kodunu <code class="docutils literal notranslate"><span class="pre">if</span> <span class="pre">kullanıcı:</span></code>
şeklinde kısaltabiliyoruz. Bu ikisi tamamen aynı anlama gelir. Yani ikisi de
‘kullanıcı değişkeninin bool değeri <cite>True</cite> ise…’ demektir.</p>
<p>Bool kavramına aşinalık kazandığımıza göre şimdi bool işleçlerini incelemeye
başlayabiliriz.</p>
<p>Bool işleçleri, bool değerlerinden birini elde etmemizi sağlayan işleçlerdir. Bu
işleçler şunlardır:</p>
<blockquote>
<div><p><cite>and</cite></p>
<p><cite>or</cite></p>
<p><cite>not</cite></p>
</div></blockquote>
<p>Eğer mantık dersleri aldıysanız bu işleçler size hiç yabancı gelmeyecektir. Eğer
lisede mantık dersleri almadıysanız veya aldığınız derslerden hiçbir şey
hatırlamıyorsanız, yine de ziyanı yok. Biz burada bu işleçleri bütün
ayrıntılarıyla inceleyeceğiz.</p>
<p>Önce <cite>and</cite> ile başlayalım…</p>
<p>Türkçe söylemek gerekirse <cite>and</cite> ‘ve’ anlamına gelir. Peki bu <cite>and</cite> ne işimize
yarar? Çok basit bir örnek verelim:</p>
<p>Hatırlarsanız geçen bölümde koşullu durumlara örnek verirken şöyle bir durumdan
bahsetmiştik:</p>
<blockquote>
<div><p>Diyelim ki Google’ın Gmail hizmeti aracılığıyla bir e.posta hesabı aldınız.
Bu hesaba gireceğiniz zaman Gmail size bir kullanıcı adı ve parola sorar.
Siz de kendinize ait kullanıcı adını ve parolayı sayfadaki kutucuklara
yazarsınız. Eğer yazdığınız kullanıcı adı ve parola doğruysa hesabınıza
erişebilirsiniz. Ama eğer kullanıcı adınız ve parolanız doğru değilse
hesabınıza erişemezsiniz. Yani e.posta hesabınıza erişmeniz, kullanıcı adı
ve parolayı doğru girme koşuluna bağlıdır.</p>
</div></blockquote>
<p>Burada çok önemli bir nokta var. Kullanıcının Gmail sistemine girebilmesi için
hem kullanıcı adını hem de parolayı doğru yazması gerekiyor. Yani kullanıcı adı
veya paroladan herhangi biri yanlış ise sisteme giriş mümkün olmayacaktır.</p>
<p>Yukarıdaki durumu taklit eden bir programı, şu ana kadar olan bilgilerimizi
kullanarak şöyle yazabiliyoruz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">kullanıcı_adı</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Kullanıcı adınız: &quot;</span><span class="p">)</span>
<span class="n">parola</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Parolanız: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">kullanıcı_adı</span> <span class="o">==</span> <span class="s2">&quot;aliveli&quot;</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">parola</span> <span class="o">==</span> <span class="s2">&quot;12345678&quot;</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Programa hoşgeldiniz&quot;</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Yanlış kullanıcı adı veya parola!&quot;</span><span class="p">)</span>

<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Yanlış kullanıcı adı veya parola!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada yeni bir bilgiyle daha karşılaşıyoruz. Gördüğünüz gibi, burada <code class="docutils literal notranslate"><span class="pre">if</span></code>
deyimlerini iç içe kullandık. Python’da istediğiniz kadar iç içe geçmiş <code class="docutils literal notranslate"><span class="pre">if</span></code>
deyimi kullanabilirsiniz. Ancak yazdığınız bir programda eğer üçten fazla iç içe
<code class="docutils literal notranslate"><span class="pre">if</span></code> deyimi kullandıysanız, benimsediğiniz yöntemi yeniden gözden geçirmenizi
tavsiye ederim. Çünkü iç içe geçmiş <code class="docutils literal notranslate"><span class="pre">if</span></code> deyimleri bir süre sonra anlaşılması
güç bir kod yapısı ortaya çıkarabilir. Neyse… Biz konumuza dönelim.</p>
<p>Yukarıdaki yazdığımız programda kullanıcının sisteme giriş yapabilmesi için hem
kullanıcı adını hem de parolayı doğru girmesi gerekiyor. Kullanıcı adı ve
paroladan herhangi biri yanlışsa sisteme girişe izin verilmiyor. Ancak
yukarıdaki yöntem dolambaçlıdır. Halbuki aynı işlevi yerine getirmenin,
Python’da çok daha kolay bir yolu var. Bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">kullanıcı_adı</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Kullanıcı adınız: &quot;</span><span class="p">)</span>
<span class="n">parola</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Parolanız: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">kullanıcı_adı</span> <span class="o">==</span> <span class="s2">&quot;aliveli&quot;</span> <span class="ow">and</span> <span class="n">parola</span> <span class="o">==</span> <span class="s2">&quot;12345678&quot;</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Programa hoşgeldiniz&quot;</span><span class="p">)</span>

<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Yanlış kullanıcı adı veya parola!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada <cite>and</cite> işlecini nasıl kullandığımızı görüyorsunuz. Bu işleci kullanarak
iki farklı ifadeyi birbirine bağladık. Böylece kullanıcının sisteme girişini hem
kullanıcı adının hem de parolanın doğru olması koşuluna dayandırdık.</p>
<p>Peki <cite>and</cite> işlecinin çalışma mantığı nedir? Dediğim gibi, <cite>and</cite> Türkçede ‘ve’
anlamına geliyor. Bu işleci daha iyi anlayabilmek için şu cümleler arasındaki
farkı düşünün:</p>
<blockquote>
<div><ol class="loweralpha simple">
<li><p>Toplantıya Ali ve Veli katılacak.</p></li>
<li><p>Toplantıya Ali veya Veli katılacak.</p></li>
</ol>
</div></blockquote>
<p>İlk cümlede ‘ve’ bağlacı kullanıldığı için, bu cümlenin gereğinin yerine
getirilebilmesi, hem Ali’nin hem de Veli’nin toplantıya katılmasına bağlıdır.
Sadece Ali veya sadece Veli’nin toplantıya katılması durumunda bu cümlenin
gereği yerine getirilememiş olacaktır.</p>
<p>İkinci cümlede ise toplantıya Ali ve Veli’den herhangi birisinin katılması
yeterlidir. Toplantıya sadece Ali’nin katılması, sadece Veli’nin katılması veya
her ikisinin birden katılması, bu cümlenin gereğinin yerine getirilebilmesi
açısından yeterlidir.</p>
<p>İşte Python’daki <cite>and</cite> işleci de aynı bu şekilde işler. Şu örneklere bir
bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="mi">10</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">23</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">==</span> <span class="mi">10</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">23</span> <span class="ow">and</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">10</span>

<span class="go">True</span>
</pre></div>
</div>
<p>Burada değeri <cite>23</cite> olan bir adet <cite>a</cite> değişkeni ve değeri <cite>10</cite> olan bir adet <cite>b</cite>
değişkeni tanımladık. Daha sonra bu iki değişkenin değerini tek tek sorguladık
ve bunların gerçekten de sırasıyla 23 ve 10 sayısına eşit olduğunu gördük. Son
olarak da bunları <cite>and</cite> işleci ile birbirine bağlayarak sorguladık. <cite>a</cite>
değişkeninin değeri 23, <cite>b</cite> değişkeninin değeri de 10 olduğu için, yani <cite>and</cite>
ile bağlanan her iki önerme de <cite>True</cite> çıktısı verdiği için <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">==</span> <span class="pre">23</span> <span class="pre">and</span> <span class="pre">b</span> <span class="pre">==</span>
<span class="pre">10</span></code> ifadesi <cite>True</cite> değeri verdi.</p>
<p>Bir de şuna bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="mi">10</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">23</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">==</span> <span class="mi">54</span>

<span class="go">False</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">23</span> <span class="ow">and</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">54</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Burada ise <cite>a</cite> değişkenin değeri <cite>23</cite>’tür. Dolayısıyla <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">==</span> <span class="pre">23</span></code> ifadesi
<cite>True</cite> çıktısı verir. Ancak <cite>b</cite> değişkeninin değeri <cite>54</cite> değildir. O yüzden de
<code class="docutils literal notranslate"><span class="pre">b</span> <span class="pre">==</span> <span class="pre">54</span></code> komutu <cite>False</cite> çıktısı verir. Gördüğünüz gibi, <cite>and</cite> işleci ile
bağlanan önermelerden herhangi biri <cite>False</cite> olduğunda çıktımız da <cite>False</cite>
oluyor. Unutmayın: <cite>and</cite> işlecinin <cite>True</cite> çıktısı verebilmesi için bu işleç
tarafından bağlanan her iki önermenin de <cite>True</cite> olması gerekir. Eğer
önermelerden biri bile <cite>True</cite> değilse çıktı da <cite>True</cite> olmayacaktır.</p>
<p>Tahmin edebileceğiniz gibi, <cite>and</cite> işleci en yaygın <code class="docutils literal notranslate"><span class="pre">if</span></code> deyimleriyle birlikte
kullanılır. Mesela yukarıda kullanıcıdan kullanıcı adı ve parola alırken de bu
<cite>and</cite> işlecinden yararlanmıştık.</p>
<p>Gelelim <cite>or</cite> işlecine…</p>
<p>Tıpkı <cite>and</cite> gibi bir bool işleci olan <cite>or</cite>’un Türkçede karşılığı ‘veya’dır.
Yukarıda ‘Toplantıya Ali veya Veli katılacak.’ cümlesini tartışırken aslında bu
<cite>or</cite> kelimesinin anlamını açıklamıştık. Hatırlarsanız <cite>and</cite> işlecinin <cite>True</cite>
çıktısı verebilmesi için bu işleçle bağlanan bütün önermelerin <cite>True</cite> değerine
sahip olması gerekiyordu. <cite>or</cite> işlecinin <cite>True</cite> çıktısı verebilmesi için ise
<cite>or</cite> işleciyle bağlanan önermelerden herhangi birinin <cite>True</cite> çıktısı vermesi
yeterli olacaktır. Söylediğimiz bu şeyleri birkaç örnek üzerinde
somutlaştıralım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="mi">10</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">23</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">==</span> <span class="mi">10</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">11</span>

<span class="go">False</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">11</span> <span class="ow">or</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">10</span>

<span class="go">True</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">==</span> <span class="pre">11</span></code> ifadesinin bool değeri <cite>False</cite> olduğu halde, <code class="docutils literal notranslate"><span class="pre">b</span> <span class="pre">==</span>
<span class="pre">10</span></code> ifadesinin bool değeri <cite>True</cite> olduğu için <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">==</span> <span class="pre">11</span> <span class="pre">or</span> <span class="pre">b</span> <span class="pre">==</span> <span class="pre">10</span></code> ifadesi
<cite>True</cite> değerini veriyor.</p>
<p><cite>and</cite> ve <cite>or</cite> işleçlerini öğrendiğimize göre, bir sınavdan alınan notların harf
karşılıklarını gösteren bir uygulama yazabiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Notunuz: &quot;</span><span class="p">))</span>

<span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">100</span> <span class="ow">or</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Böyle bir not yok&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">90</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;A aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">80</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">89</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;B aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">70</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">79</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;C aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">60</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">69</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;D aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">59</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;F aldınız.&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Bu programda eğer kullanıcı <cite>100</cite>’den büyük ya da <cite>0</cite>’dan küçük bir sayı girerse
<cite>Böyle bir not yok</cite> uyarısı alacaktır. 0-100 arası notlarda ise, her bir not
aralığına karşılık gelen harf görüntülecektir. Eğer isterseniz yukarıdaki
kodları şu şekilde de kısaltabilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Notunuz: &quot;</span><span class="p">))</span>

<span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">100</span> <span class="ow">or</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Böyle bir not yok&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">90</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;A aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">80</span> <span class="o">&lt;=</span> <span class="mi">89</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;B aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">70</span> <span class="o">&lt;=</span> <span class="mi">79</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;C aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">60</span> <span class="o">&lt;=</span> <span class="mi">69</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;D aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="mi">59</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;F aldınız.&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <code class="docutils literal notranslate"><span class="pre">and</span> <span class="pre">x</span></code> kısımlarını çıkardığımızda da bir önceki kodlarla
aynı anlamı yakalayabiliyoruz.</p>
<p>Hatta yukarıdaki kodları şöyle de yazabilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Notunuz: &quot;</span><span class="p">))</span>

<span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">100</span> <span class="ow">or</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Böyle bir not yok&quot;</span><span class="p">)</span>

<span class="c1">#90 sayısı x&#39;ten küçük veya x&#39;e eşit,</span>
<span class="c1">#x sayısı 100&#39;den küçük veya 100&#39;e eşit ise,</span>
<span class="c1">#Yani x, 90 ile 100 arasında bir sayı ise</span>
<span class="k">elif</span> <span class="mi">90</span> <span class="o">&lt;=</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">100</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;A aldınız.&quot;</span><span class="p">)</span>

<span class="c1">#80 sayısı x&#39;ten küçük veya x&#39;e eşit,</span>
<span class="c1">#x sayısı 89&#39;dan küçük veya 89&#39;a eşit ise,</span>
<span class="c1">#Yani x, 80 ile 89 arasında bir sayı ise</span>
<span class="k">elif</span> <span class="mi">80</span> <span class="o">&lt;=</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">89</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;B aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="mi">70</span> <span class="o">&lt;=</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">79</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;C aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="mi">60</span> <span class="o">&lt;=</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">69</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;D aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">x</span> <span class="o">&lt;=</span> <span class="mi">59</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;F aldınız.&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Bu kodlar bir öncekiyle aynı işi yapar. Yorumlardan da göreceğiniz gibi, bu iki
kod arasında sadece mantık farkı var.</p>
<p>Hatta, daha da ileri giderek aynı kodu çok daha basit hale getirmek isterseniz,
aşağıdaki koda bakabilirsiniz.:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Notunuz: &quot;</span><span class="p">))</span>

<span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">100</span> <span class="ow">or</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Böyle bir not yok&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">90</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;A aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">80</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;B aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">70</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;C aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;D aldınız.&quot;</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;F aldınız.&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Son bool işlecimiz <cite>not</cite>. Bu kelimenin İngilizce’deki anlamı ‘değil’dir. Bu
işleci şöyle kullanıyoruz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
<span class="gp">&gt;&gt;&gt; </span><span class="ow">not</span> <span class="n">a</span>

<span class="go">False</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="ow">not</span> <span class="n">a</span>

<span class="go">True</span>
</pre></div>
</div>
<p>Bu işleç, özellikle kullanıcı tarafından bir değişkene veri girilip
girilmediğini denetlemek için kullanılabilir. Örneğin:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">parola</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;parola: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="ow">not</span> <span class="n">parola</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Parola boş bırakılamaz!&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Eğer kullanıcı herhangi bir parola belirlemeden doğrudan <cite>Enter</cite> tuşuna basacak
olursa <cite>parola</cite> değişkeninin değeri boş bir karakter dizisi olacaktır. Yani
<code class="docutils literal notranslate"><span class="pre">parola</span> <span class="pre">=</span> <span class="pre">&quot;&quot;</span></code>. Boş veri tiplerinin bool değerinin <cite>False</cite> olacağını biliyoruz.
Dolayısıyla, yukarıdaki gibi bir örnekte, kullanıcı parolayı boş geçtiğinde
<code class="docutils literal notranslate"><span class="pre">not</span> <span class="pre">parola</span></code> kodu <cite>True</cite> verecek ve böylece ekrana <cite>“Parola boş bırakılamaz!”</cite>
karakter dizisi yazdırılacaktır. Eğer yukarıdaki örneğin mantığını kavramakta
zorluk çekiyorsanız şu örnekleri incelemenizi öneririm:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">parola</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="n">parola</span><span class="p">)</span>

<span class="go">False</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="ow">not</span> <span class="n">parola</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">parola</span> <span class="o">=</span> <span class="s2">&quot;1243&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="n">parola</span><span class="p">)</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="ow">not</span> <span class="n">parola</span><span class="p">)</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Aslında yukarıdaki örneklerde şuna benzer sorular sormuş gibi oluyoruz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">parola</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="n">parola</span><span class="p">)</span> <span class="c1">#parola boş bırakılmamış, değil mi?</span>

<span class="gp">&gt;&gt;&gt; </span><span class="kc">False</span> <span class="c1">#Hayır, parola boş bırakılmış.</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">bool</span><span class="p">(</span><span class="ow">not</span> <span class="n">parola</span><span class="p">)</span> <span class="c1">#parola boş bırakılmış, değil mi?</span>

<span class="gp">&gt;&gt;&gt; </span><span class="kc">True</span> <span class="c1">#Evet, parola boş bırakılmış</span>
</pre></div>
</div>
<p>Kendi kendinize pratik yaparak bu işlecin görevini daha iyi anlayabilirsiniz.</p>
<p>Böylece kısmen çetrefilli bir konu olan bool işleçlerini de geride bırakmış
olduk. Sırada değer atama işleçleri var.</p>
</section>
<section id="deger-atama-islecleri">
<h2>Değer Atama İşleçleri</h2>
<p>Bu noktaya kadar yaptığımız çalışmalarda sadece tek bir değer atama işleci
gördük. Bu işleç <cite>=</cite> işlecidir. Adından da anlaşılacağı gibi, bu işlecin görevi
bir değişkene değer atamaktır. Mesela:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
</pre></div>
</div>
<p>Burada <cite>=</cite> işleci <cite>a</cite> değişkenine <cite>23</cite> değerini atama işlevi görüyor.</p>
<p>Python’daki tek değer atama işleci elbette <cite>=</cite> değildir. Bunun dışında başka
değer atama işleçleri de bulunur. Tek tek inceleyelim:</p>
<p><strong>+= işleci</strong></p>
<p>Bu işlecin ne işe yaradığını anlamak için şöyle bir örnek düşünün:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
</pre></div>
</div>
<p><cite>a</cite> değerine mesela <cite>5</cite> ekleyip bu değeri <cite>28</cite>’e eşitlemek için ne yapmamız
lazım? Tabii ki şunu:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">28</span>
</pre></div>
</div>
<p>Burada yaptığımız şey çok basit: <cite>a</cite> değişkeninin taşıdığı değere <cite>5</cite> ilave
ediyoruz ve daha sonra bu değeri tekrar <cite>a</cite> değişkenine atıyoruz. Aynı işlemi
çok daha kolay bir şekilde de yapabiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">+=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">28</span>
</pre></div>
</div>
<p>Bu kod, yukarıdakiyle tamamen aynı anlama gelir. Ama bir önceki koda göre çok
daha verimlidir. Çünkü <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">+=</span> <span class="pre">5</span></code> kodunda Python <cite>a</cite> değişkeninin değerini
sadece bir kez kontrol ettiği için, işlemi <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">=</span> <span class="pre">a</span> <span class="pre">+</span> <span class="pre">5</span></code> koduna göre daha hızlı
yapacaktır.</p>
<p><strong>-= işleci</strong></p>
<p>Bir önceki <cite>+=</cite> işleci toplama işlemi yapıp, ortaya çıkan değeri tekrar aynı
değişkene atıyordu. <cite>-=</cite> işleci de buna benzer bir işlem gerçekleştirir:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">-=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">18</span>
</pre></div>
</div>
<p>Yukarıdaki kullanım şununla tamamen aynıdır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">23</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">-</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">18</span>
</pre></div>
</div>
<p>Ancak tıpkı <cite>+=</cite> işlecinde olduğu gibi, <cite>-=</cite> işleci de alternatifine göre daha
hızlı çalışan bir araçtır.</p>
<p><strong>/= işleci</strong></p>
<p>Bu işlecin çalışma mantığı da yukarıdaki işleçlerle aynıdır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">30</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">/=</span> <span class="mi">3</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">10</span>
</pre></div>
</div>
<p>Yukarıdaki işlem de şununla tamamen aynıdır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">30</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">/</span> <span class="mi">3</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">10</span>
</pre></div>
</div>
<p><strong>*= işleci</strong></p>
<p>Bu da ötekiler gibi, çarpma işlemi yapıp, bu işlemin sonucunu aynı değişkene atar:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">20</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">*=</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">40</span>
</pre></div>
</div>
<p>Bu işlecin eşdeğeri de şudur:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">20</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">*</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">40</span>
</pre></div>
</div>
<p><strong>%= işleci</strong></p>
<p>Bu işlecimiz ise bölme işleminden kalan sayıyı aynı değişkene atar:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">40</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">%=</span> <span class="mi">3</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">1</span>
</pre></div>
</div>
<p>Bu işleç de şuna eşdeğerdir:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">40</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">%</span> <span class="mi">3</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">1</span>
</pre></div>
</div>
<p><strong>**= işleci</strong></p>
<p>Bu işlecin ne yaptığını tahmin etmek zor değil. Bu işlecimiz, bir sayının
kuvvetini hesapladıktan sonra çıkan değeri aynı değişkene atıyor:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">12</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">**=</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">144</span>
</pre></div>
</div>
<p>Eşdeğeri:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">12</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">**</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">144</span>
</pre></div>
</div>
<p><strong>//= işleci</strong></p>
<p>Değer atama işleçlerinin sonuncusu olan <cite>//=</cite> işlecinin görevi ise taban bölme
işleminin sonucunu aynı değişkene atamaktır:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">//=</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">2</span>
</pre></div>
</div>
<p>Eşdeğeri:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">//</span> <span class="mi">2</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">2</span>
</pre></div>
</div>
<p>Bu işleçler arasından, özellikle <cite>+=</cite> ve <cite>-=</cite> işleçleri işinize bir hayli yarayacak.</p>
<p>Bu arada eğer bu işleçleri kullanırken mesela <cite>+=</cite> mi yoksa <cite>=+</cite> mı yazacağınızı
karıştırıyorsanız, şöyle düşünebilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">+=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">10</span>
</pre></div>
</div>
<p>Burada, değeri <cite>5</cite> olan bir <cite>a</cite> değişkenine <cite>5</cite> daha ekleyip, çıkan sonucu
tekrar <cite>a</cite> değişkenine atadık. Böylece değeri <cite>10</cite> olan bir <cite>a</cite> değişkeni elde
ettik. <cite>+=</cite> işlecinin doğru kullanımı yukarıdaki gibidir. Bir de yukarıdaki
örneği şöyle yazmayı deneyelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=+</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">5</span>
</pre></div>
</div>
<p>Burada <cite>+</cite> işleci ile <cite>=</cite> işlecinin yerini değiştirdik.</p>
<p><code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">=+</span> <span class="pre">5</span></code> satırına dikkatlice bakın. Aslında burada yaptığımız şeyin <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">=</span> <span class="pre">+5</span></code>
işlemi olduğunu, yani <cite>a</cite> değişkenine <cite>+5</cite> gibi bir değer verdiğimizi
göreceksiniz. Durum şu örnekte daha net görünecektir:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=-</span> <span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="gp">&gt;&gt;&gt; </span><span class="o">-</span><span class="mi">5</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">=-</span> <span class="pre">5</span></code> yazdığımızda, aslında yaptığımız şey <cite>a</cite> değişkenine
<cite>-5</cite> değerini vermekten ibarettir. Yani <code class="docutils literal notranslate"><span class="pre">a</span> <span class="pre">=</span> <span class="pre">-5</span></code>.</p>
<p><strong>:= işleci</strong></p>
<div class="admonition note">
<p class="admonition-title">Not</p>
<p>Walrus operatörü olarak da bilinen bu işleç, Python’un 3.8 versiyonu ile
eklenmiştir. Bundan önceki versiyonlarda bulunmamaktadır ve çalışmayacaktır.
<code class="docutils literal notranslate"><span class="pre">SyntaxError</span></code> hatası verecektir.</p>
</div>
<p>Bu işleç biraz garip gözüküyor olabilir. Ne yaptığını bakarak kestirmek de biraz
zor. En iyisi bir örnekle başlayalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">giriş</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Adın ne? &quot;</span><span class="p">))</span>

<span class="k">if</span> <span class="n">giriş</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Adın kısaymış.&quot;</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">giriş</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Adın biraz uzunmuş.&quot;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Çok uzun bir adın var.&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Gördüğünüz gibi girilen karakter dizisinin uzunluğuna göre ekrana bir çıktı yazdırmaktayız.
Python3.8’e sahipseniz vereceğimiz örnekleri kendiniz de deneyebilirsiniz.
Bir de <code class="docutils literal notranslate"><span class="pre">:=</span></code> işleci ile bu kodu nasıl yazabileceğimize bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="p">(</span> <span class="n">giriş</span> <span class="o">:=</span> <span class="nb">len</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Adın ne? &quot;</span><span class="p">))</span> <span class="p">)</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Adın kısaymış.&quot;</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">giriş</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Adın biraz uzunmuş.&quot;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Çok uzun bir adın var.&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada <code class="docutils literal notranslate"><span class="pre">giriş</span></code> değişkenine değer atamayı <code class="docutils literal notranslate"><span class="pre">if</span></code> ifadesinin içinde yaptık.
Normalde böyle bir işlemi <code class="docutils literal notranslate"><span class="pre">=</span></code> ile yapamazdık:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="k">if</span> <span class="p">(</span> <span class="n">giriş</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Adın ne? &quot;</span><span class="p">))</span> <span class="p">)</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">:</span>

<span class="go">SyntaxError: invalid syntax</span>
</pre></div>
</div>
<p>Fark edebileceğiniz gibi walrus operatörü bizi bir satır fazladan yazmaktan
kurtardı. Kullanıcıdan alınan bilginin giriş değişkenine nasıl atandığına dikkat
edin. <code class="docutils literal notranslate"><span class="pre">giriş</span></code> değişkeninden sonra <code class="docutils literal notranslate"><span class="pre">:=</span></code> işlecini kullanıyoruz ve aynı zamanda
değişken atamasını yaptığımız bölümün tamamını parantez içine alıyoruz. Peki bu
parantezi koymaz isek ne olur? Gelin bir örnek ile de onu deneyelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span>  <span class="n">giriş</span> <span class="o">:=</span> <span class="nb">len</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Adın ne? &quot;</span><span class="p">))</span>  <span class="o">&lt;</span> <span class="mi">4</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">giriş</span><span class="p">)</span>
</pre></div>
</div>
<p>Eğer bu kodu çalıştırsanız ekrana <code class="docutils literal notranslate"><span class="pre">True</span></code> yazıldığını veya hiçbir şey yazılmadığını
görebilirsiniz. Oysa önceki parantez kullandığımız kodda <code class="docutils literal notranslate"><span class="pre">giriş</span></code> değişkeni bir
<code class="docutils literal notranslate"><span class="pre">int</span></code>’di. Bu örneğimizde ise ilk önce <code class="docutils literal notranslate"><span class="pre">len(input(&quot;Adın</span> <span class="pre">ne?</span> <span class="pre">&quot;))</span>&#160; <span class="pre">&lt;</span> <span class="pre">4</span></code> kısmı
çalışıyor ve bunun sonucu daha sonra <code class="docutils literal notranslate"><span class="pre">giriş</span></code> değişkenimize atanıyor. Bu yüzden <code class="docutils literal notranslate"><span class="pre">giriş</span></code>
değişkenimiz <code class="docutils literal notranslate"><span class="pre">True</span></code> veya <code class="docutils literal notranslate"><span class="pre">False</span></code>, yani bir <code class="docutils literal notranslate"><span class="pre">bool</span></code> oluyor. Eğer <code class="docutils literal notranslate"><span class="pre">giriş</span></code> değişkeni
<code class="docutils literal notranslate"><span class="pre">True</span></code> olursa ekrana yazılıyor, ancak eğer <code class="docutils literal notranslate"><span class="pre">False</span></code> olursa ekrana yazılmıyor. Çünkü
<code class="docutils literal notranslate"><span class="pre">if</span></code> ifadesinin değeri de <code class="docutils literal notranslate"><span class="pre">False</span></code> oluyor. <code class="docutils literal notranslate"><span class="pre">if</span></code> ifadesinin kontrol ettiği yer
<code class="docutils literal notranslate"><span class="pre">len(input(&quot;Adın</span> <span class="pre">ne?</span> <span class="pre">&quot;))</span>&#160; <span class="pre">&lt;</span> <span class="pre">4</span></code> kısmı olduğu için <code class="docutils literal notranslate"><span class="pre">if</span></code> deyiminin içine girilmiyor.</p>
<p>Çok önemli bir işleç olmayabilir ama bazen aynı fonksiyonu iki defa çağırmak yerine
bir defa çağırmak gibi kolaylıklar sağlamaktadır. Bu konu ile alakalı daha fazla örnek için <a class="reference external" href="https://forum.yazbel.com/t/walrus-operator/4612">buraya</a><span class="link-target"> [https://forum.yazbel.com/t/walrus-operator/4612]</span> bakabilirsiniz</p>
</section>
<section id="aitlik-islecleri">
<h2>Aitlik İşleçleri</h2>
<p>Aitlik işleçleri, bir karakter dizisi ya da sayının, herhangi bir veri tipi
içinde bulunup bulunmadığını sorgulamamızı sağlayan işleçlerdir.</p>
<p>Python’da bir tane aitlik işleci bulunur. Bu işleç de <cite>in</cite> işlecidir. Bu işleci
şöyle kullanıyoruz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;abcd&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="s2">&quot;a&quot;</span> <span class="ow">in</span> <span class="n">a</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="s2">&quot;f&quot;</span> <span class="ow">in</span> <span class="n">a</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, <cite>in</cite> adlı bu işleç, bir öğenin, veri tipi içinde bulunup
bulunmadığını sorguluyor. Eğer bahsedilen öğe, veri tipi içinde geçiyorsa <cite>True</cite>
çıktısı, eğer geçmiyorsa <cite>False</cite> çıktısı alıyoruz.</p>
<p>Henüz bu <cite>in</cite> işlecini verimli bir şekilde kullanmamızı sağlayacak araçlardan
yoksunuz. Ancak birkaç sayfa sonra öğreneceğimiz yeni araçlarla birlikte bu
işleci çok daha düzgün ve verimli bir şekilde kullanabilecek duruma geleceğiz.</p>
</section>
<section id="kimlik-islecleri">
<h2>Kimlik İşleçleri</h2>
<p>Python’da her şeyin (ya da başka bir deyişle her nesnenin) bir kimlik numarası
(<em>identity</em>) vardır. Kabaca söylemek gerekirse, bu kimlik numarası denen şey
esasında o nesnenin bellekteki adresini gösterir.</p>
<p>Peki bir nesnenin kimlik numarasına nasıl ulaşırız?</p>
<p>Python’da bu işi yapmamızı sağlayacak <code class="docutils literal notranslate"><span class="pre">id()</span></code> adlı bir fonksiyon bulunur
(İngilizcedeki <em>identity</em> (kimlik) kelimesinin kısaltması). Şimdi bir örnek
üzerinde bu <code class="docutils literal notranslate"><span class="pre">id()</span></code> fonksiyonunu nasıl kullanacağımıza bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">100</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">137990748</span>
</pre></div>
</div>
<p>Çıktıda gördüğümüz <cite>137990748</cite> sayısı <cite>a</cite> değişkeninin tuttuğu <cite>100</cite> sayısının
kimlik numarasını gösteriyor.</p>
<p>Bir de şu örneklere bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">50</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">505494576</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">kardiz</span> <span class="o">=</span> <span class="s2">&quot;Elveda Zalim Dünya!&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">kardiz</span><span class="p">)</span>

<span class="go">14461728</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, Python’daki her nesnenin kimliği eşşiz, tek ve benzersizdir.</p>
<p>Yukarıda verdiğimiz ilk örnekte bir <cite>a</cite> değişkeni tanımlayıp bunun değerini
<cite>100</cite> olarak belirlemiş ve <code class="docutils literal notranslate"><span class="pre">id(a)</span></code> komutuyla da bu nesnenin kimlik numarasına
ulaşmıştık. Yani:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">100</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="go">137990748</span>
</pre></div>
</div>
<p>Bir de şu örneğe bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="mi">100</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>

<span class="go">137990748</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, Python <cite>a</cite> ve <cite>b</cite> değişkenlerinin değeri için aynı kimlik
numarasını gösterdi. Bu demek oluyor ki, Python iki adet <cite>100</cite> sayısı için
bellekte iki farklı nesne oluşturmuyor. İlk kullanımda önbelleğine aldığı
sayıyı, ikinci kez ihtiyaç olduğunda bellekten alıp kullanıyor. Bu tür bir
önbellekleme mekanizmasının gerekçesi performansı artırmaktır.</p>
<p>Ama bir de şu örneklere bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">1000</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>

<span class="go">15163440</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="o">=</span> <span class="mi">1000</span>
<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>

<span class="go">14447040</span>

<span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>

<span class="go">15163632</span>
</pre></div>
</div>
<p>Bu defa Python <cite>a</cite> değişkeninin tuttuğu <cite>1000</cite> sayısı, <cite>b</cite> değişkeninin tuttuğu
1000 sayısı ve tek başına yazdığımız <cite>1000</cite> sayısı için farklı kimlik numaraları
gösterdi. Bu demek oluyor ki, Python <cite>a</cite> değişkeninin tuttuğu <cite>1000</cite> sayısı
için, <cite>b</cite> değişkeninin tuttuğu <cite>1000</cite> sayısı için ve doğrudan girdiğimiz <cite>1000</cite>
sayısı için bellekte üç farklı nesne oluşturuyor. Yani bu üç adet <cite>1000</cite> sayısı
Python açısından birbirinden farklı…</p>
<p>Yukarıdaki durumu görebileceğimiz başka bir yöntem de Python’daki <cite>is</cite> adlı
kimlik işlecini kullanmaktır. Deneyelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="mi">1000</span>

<span class="go">False</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">b</span> <span class="ow">is</span> <span class="mi">1000</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, Python <cite>False</cite> (Yanlış) çıktısını suratımıza bir tokat gibi
çarptı… Peki bu ne anlama geliyor?</p>
<p>Bu şu anlama geliyor: Demek ki görünüşte aynı olan iki nesne aslında birbirinin
aynı olmayabiliyor. Bunun neden bu kadar önemli olduğunu ilerleyen derslerde çok
daha iyi anlayacağız.</p>
<p>Yukarıdaki durumun bir başka yansıması daha vardır. Özellikle Python’a yeni
başlayıp da bu dilde yer alan <cite>is</cite> işlecini öğrenenler, bu işlecin <cite>==</cite>
işleciyle aynı işleve sahip olduğu yanılgısına kapılabiliyor ve <cite>is</cite> işlecini
kullanarak iki nesne arasında karşılaştırma işlemi yapmaya kalkışabiliyor.</p>
<p>Ancak Python’da <cite>is</cite> işlecini kullanarak iki nesne arasında karşılaştırma yapmak
güvenli değildir. Yani <cite>is</cite> ve <cite>==</cite> işleçleri birbirleriyle aynı işlevi görmez.
Bu iki işleç nesnelerin farklı yönlerini sorgular: <cite>is</cite> işleci nesnelerin
kimliklerine bakıp o nesnelerin aynı nesneler olup olmadığını kontrol ederken,
<cite>==</cite> işleci nesnelerin içeriğine bakarak o nesnelerin aynı değere sahip olup
olmadıklarını sorgular. Bu iki tanım arasındaki ince farka dikkat edin.</p>
<p>Yani:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="mi">1000</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Ama:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="mi">1000</span>

<span class="go">True</span>
</pre></div>
</div>
<p>Burada <cite>is</cite> işleci <cite>a</cite> değişkeninin tuttuğu veri ile <cite>1000</cite> sayısının aynı
kimlik numarasına sahip olup olmadığını sorgularken, <cite>==</cite> işleci <cite>a</cite>
değişkeninin tuttuğu verinin <cite>1000</cite> olup olmadığını denetliyor. Yani <cite>is</cite>
işlecinin yaptığı şey kabaca şu oluyor:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="nb">id</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="o">==</span> <span class="nb">id</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Şimdiye kadar denediğimiz örnekler hep sayıydı. Şimdi isterseniz bir de karakter
dizilerinin durumuna bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;python&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="s2">&quot;python&quot;</span>

<span class="go">True</span>
</pre></div>
</div>
<p>Burada <cite>True</cite> çıktısını aldık. Bir de <cite>==</cite> işleci ile bir karşılaştırma
yapalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="s2">&quot;python&quot;</span>

<span class="go">True</span>
</pre></div>
</div>
<p>Bu da normal olarak <cite>True</cite> çıktısı veriyor. Ama şu örneğe bakarsak:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="s2">&quot;python güçlü ve kolay bir programlama dilidir&quot;</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="s2">&quot;python güçlü ve kolay bir programlama dilidir&quot;</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Ama:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">==</span> <span class="s2">&quot;python güçlü ve kolay bir programlama dilidir&quot;</span>

<span class="go">True</span>
</pre></div>
</div>
<p><cite>is</cite> ve <cite>==</cite> işleçlerinin nasıl da farklı sonuçlar verdiğini görüyorsunuz. Çünkü
bunlardan biri nesnelerin kimliğini sorgularken, öbürü nesnelerin içeriğini
sorguluyor. Ayrıca burada dikkatimizi çekmesi gereken başka bir nokta da
<cite>“python”</cite> karakter dizisinin önbelleğe alınıp gerektiğinde tekrar tekrar
kullanılıyorken, <cite>“python güçlü ve kolay bir programlama dilidir”</cite> karakter
dizisinin ise önbelleğe alınmıyor olmasıdır. Aynı karakter dizisinin tekrar
kullanılması gerektiğinde Python bunun için bellekte yeni bir nesne daha
oluşturuyor.</p>
<p>Peki neden Python, örneğin, <cite>100</cite> sayısını ve <cite>“python”</cite> karakter dizisini
önbelleklerken <cite>1000</cite> sayısını ve <cite>“python güçlü ve kolay bir programlama
dilidir”</cite> karakter dizisini önbelleğe almıyor. Sebebi şu: Python kendi iç
mekanizmasının işleyişi gereğince ‘ufak’ nesneleri önbelleğe alırken ‘büyük’
nesneler için her defasında yeni bir depolama işlemi yapıyor. Peki ufak ve büyük
kavramlarının ölçütü nedir? İsterseniz Python açısından ufak kavramının
sınırının ne olabileceğini şöyle bir kod yardımıyla sorgulayabiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">1000</span><span class="p">):</span>
<span class="gp">... </span>    <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="o">-</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">1000</span><span class="p">):</span>
<span class="gp">... </span>        <span class="k">if</span> <span class="n">k</span> <span class="ow">is</span> <span class="n">v</span><span class="p">:</span>
<span class="gp">... </span>            <span class="nb">print</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</pre></div>
</div>
<div class="admonition note">
<p class="admonition-title">Not</p>
<p>Burada henüz öğrenmediğimiz şeyler var. Bunları birkaç bölüm sonra
ayrıntılı bir şekilde inceleyeceğiz.</p>
</div>
<p>Bu kod <cite>-1000</cite> ve <cite>1000</cite> aralığındaki iki sayı grubunu karşılaştırıp, kimlikleri
aynı olan sayıları ekrana döküyor. Yani bir bakıma Python’un hangi sayıya kadar
önbellekleme yaptığını gösteriyor. Buna göre <cite>-5</cite> ile <cite>257</cite> arasında kalan
sayılar Python tarafından ufak olarak değerlendiriliyor ve önbelleğe alınıyor.
Bu aralığın dışında kalan sayılar için ise bellekte her defasında ayrı bir nesne
oluşturuluyor.</p>
<p>Burada aldığımız sonuca göre şöyle bir denetleme işlemi yapalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">256</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="mi">256</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="mi">257</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="mi">257</span>

<span class="go">False</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="o">-</span><span class="mi">5</span>

<span class="go">True</span>

<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span class="o">-</span><span class="mi">6</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">a</span> <span class="ow">is</span> <span class="o">-</span><span class="mi">6</span>

<span class="go">False</span>
</pre></div>
</div>
<p>Böylece Python’daki kimlik işleçlerini de incelemiş olduk. Belki programcılık
maceranız boyunca <code class="docutils literal notranslate"><span class="pre">id()</span></code> fonksiyonunu hiç kullanmayacaksınız, ancak bu
fonksiyonun arkasındaki mantığı anlamak, Python’ın kimi yerlerde alttan alta
neler çevirdiğini çok daha kolay kavramanızı sağlayacaktır.</p>
<div class="admonition note">
<p class="admonition-title">Not</p>
<p><a class="reference external" href="http://forum.ceviz.net/showthread.php?t=87565">http://forum.ceviz.net/showthread.php?t=87565</a> adresindeki tartışmaya
bakınız.</p>
</div>
<p>Böylece Python’daki bütün işleçleri ayrıntılı bir şekilde incelemiş olduk.
Dilerseniz şimdi bu konuyla ilgili birkaç uygulama örneği yapalım.</p>
</section>
<section id="uygulama-ornekleri">
<h2>Uygulama Örnekleri</h2>
<section id="basit-bir-hesap-makinesi">
<h3>Basit Bir Hesap Makinesi</h3>
<p>Şu ana kadar Python’da pek çok şey öğrendik. Bu öğrendiğimiz şeylerle artık
kısmen yararlı bazı programlar yazabiliriz. Elbette henüz yazacağımız programlar
pek yetenekli olamayacak olsa da, en azından bize öğrendiklerimizle pratik yapma
imkanı sağlayacak. Bu bölümde, <code class="docutils literal notranslate"><span class="pre">if</span></code>, <code class="docutils literal notranslate"><span class="pre">elif</span></code>, <code class="docutils literal notranslate"><span class="pre">else</span></code> yapılarını ve
öğrendiğimiz temel aritmetik işleçleri kullanarak çok basit bir hesap makinesi
yapmayı deneyeceğiz. Bu arada, bu derste yeni şeyler öğrenerek ufkumuzu ve
bilgimizi genişletmeyi de ihmal etmeyeceğiz.</p>
<p>İsterseniz önce kullanıcıya bazı seçenekler sunarak işe başlayalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">giriş</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">(1) topla</span>
<span class="s2">(2) çıkar</span>
<span class="s2">(3) çarp</span>
<span class="s2">(4) böl</span>
<span class="s2">(5) karesini hesapla</span>
<span class="s2">(6) kare kök hesapla</span>
<span class="s2">&quot;&quot;&quot;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">giriş</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada kullanıcıya bazı seçenekler sunduk. Bu seçenekleri ekrana yazdırmak için
üç tırnak işaretlerinden yararlandığımıza dikkat edin. Birden fazla satıra
yayılmış bu tür ifadeleri en kolay üç tırnak işaretleri yardımıyla
yazdırabileceğimizi biliyorsunuz artık.</p>
<p>Biz burada bütün seçenekleri tek bir değişken içine yerleştirdik. Esasında her
bir seçenek için ayrı bir değişken tanımlamak da mümkündür. Yani aslında
yukarıdaki kodları şöyle de yazabiliriz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">seçenek1</span> <span class="o">=</span> <span class="s2">&quot;(1) topla&quot;</span>
<span class="n">seçenek2</span> <span class="o">=</span> <span class="s2">&quot;(2) çıkar&quot;</span>
<span class="n">seçenek3</span> <span class="o">=</span> <span class="s2">&quot;(3) çarp&quot;</span>
<span class="n">seçenek4</span> <span class="o">=</span> <span class="s2">&quot;(4) böl&quot;</span>
<span class="n">seçenek5</span> <span class="o">=</span> <span class="s2">&quot;(5) karesini hesapla&quot;</span>
<span class="n">seçenek6</span> <span class="o">=</span> <span class="s2">&quot;(6) karekök hesapla&quot;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">seçenek1</span><span class="p">,</span> <span class="n">seçenek2</span><span class="p">,</span> <span class="n">seçenek3</span><span class="p">,</span> <span class="n">seçenek4</span><span class="p">,</span> <span class="n">seçenek5</span><span class="p">)</span>
</pre></div>
</div>
<p>Yalnız burada dikkat ederseniz, seçenekler hep yan yana diziliyor. Eğer
programınızda yukarıdaki şekli kullanmak isterseniz, bu seçeneklerin yan yana
değil de, alt alta görünmesini sağlamak için, önceki derslerimizde öğrendiğimiz
<cite>sep</cite> parametresini kullanabilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">seçenek1</span> <span class="o">=</span> <span class="s2">&quot;(1) topla&quot;</span>
<span class="n">seçenek2</span> <span class="o">=</span> <span class="s2">&quot;(2) çıkar&quot;</span>
<span class="n">seçenek3</span> <span class="o">=</span> <span class="s2">&quot;(3) çarp&quot;</span>
<span class="n">seçenek4</span> <span class="o">=</span> <span class="s2">&quot;(4) böl&quot;</span>
<span class="n">seçenek5</span> <span class="o">=</span> <span class="s2">&quot;(5) karesini hesapla&quot;</span>
<span class="n">seçenek6</span> <span class="o">=</span> <span class="s2">&quot;(6) karekök hesapla&quot;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">seçenek1</span><span class="p">,</span> <span class="n">seçenek2</span><span class="p">,</span> <span class="n">seçenek3</span><span class="p">,</span> <span class="n">seçenek4</span><span class="p">,</span> <span class="n">seçenek5</span><span class="p">,</span> <span class="n">seçenek6</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada <cite>sep</cite> parametresinin değeri olarak <cite>\n</cite> kaçış dizisini belirlediğimize
dikkat edin. <cite>\n</cite> kaçış dizisinin ne işe yaradığını hatırlıyorsunuz. Bu dizi,
satır başına geçmemizi sağlıyordu. Burada, ayraç olarak satır başı kaçış
dizisini belirlediğimiz için her bir seçenek yan yana değil, alt alta
görünecektir. Elbette <cite>sep</cite> parametresi için istediğiniz değeri
belirleyebilirsiniz. Mesela her bir seçeneği satır başı işaretiyle ayırmak
yerine, çift tire gibi bir işaretle ayırmayı da tercih edebilirsiniz:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="nb">print</span><span class="p">(</span><span class="n">seçenek1</span><span class="p">,</span> <span class="n">seçenek2</span><span class="p">,</span> <span class="n">seçenek3</span><span class="p">,</span> <span class="n">seçenek4</span><span class="p">,</span> <span class="n">seçenek5</span><span class="p">,</span> <span class="n">sep</span><span class="o">=</span><span class="s2">&quot;--&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Programınızda nasıl bir giriş paragrafı belirleyeceğiniz konusunda özgürsünüz.
Gelin isterseniz biz birinci şekille yolumuza devam edelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">giriş</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">(1) topla</span>
<span class="s2">(2) çıkar</span>
<span class="s2">(3) çarp</span>
<span class="s2">(4) böl</span>
<span class="s2">(5) karesini hesapla</span>
<span class="s2">(6) karekök hesapla</span>
<span class="s2">&quot;&quot;&quot;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">giriş</span><span class="p">)</span>
</pre></div>
</div>
<p>Burada <cite>giriş</cite> adlı bir değişken oluşturduk. Bu değişkenin içinde barındırdığı
değeri kullanıcıların görebilmesi için <code class="docutils literal notranslate"><span class="pre">print()</span></code> fonksiyonu yardımıyla bu
değişkeni ekrana yazdırıyoruz. Devam edelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">soru</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Yapmak istediğiniz işlemin numarasını girin: &quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Bu kod yardımıyla kullanıcıya bir soru soruyoruz. Kullanıcıdan yapmasını
istediğimiz şey, yukarıda belirlediğimiz giriş seçenekleri içinden bir sayı
seçmesi. Kullanıcı <cite>1</cite>, <cite>2</cite>, <cite>3</cite>, <cite>4</cite>, <cite>5</cite> veya <cite>6</cite> seçeneklerinden herhangi
birini seçebilir. Kullanıcıyı, seçtiği numaranın karşısında yazan işleme
yönlendireceğiz. Yani mesela eğer kullanıcı klavyedeki <cite>1</cite> tuşuna basarsa hesap
makinemiz toplama işlemi yapacaktır. <cite>2</cite> tuşu ise kullanıcıyı çıkarma işlemine
yönlendirir…</p>
<p><code class="docutils literal notranslate"><span class="pre">input()</span></code> fonksiyonunu işlediğimiz bölümde, bu fonksiyonun değer olarak her
zaman bir karakter dizisi (<em>string</em>) verdiğini söylemiştik. Yukarıdaki kodun
çıktısı da doğal olarak bir karakter dizisi olacaktır. Bizim şu aşamada
kullanıcıdan karakter dizisi almamızın bir sakıncası yok. Çünkü kullanıcının
gireceği <cite>1</cite>, <cite>2</cite>, <cite>3</cite>, <cite>4</cite>, <cite>5</cite> veya <cite>6</cite> değerleriyle herhangi bir aritmetik
işlem yapmayacağız. Kullanıcının gireceği bu değerler, yalnızca bize onun hangi
işlemi yapmak istediğini belirtecek. Dolayısıyla <code class="docutils literal notranslate"><span class="pre">input()</span></code> fonksiyonunu
yukarıdaki şekilde kullanıyoruz.</p>
<p>İsterseniz şimdiye kadar gördüğümüz kısma topluca bakalım:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="n">giriş</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">(1) topla</span>
<span class="s2">(2) çıkar</span>
<span class="s2">(3) çarp</span>
<span class="s2">(4) böl</span>
<span class="s2">(5) karesini hesapla</span>
<span class="s2">(6) karekök hesapla</span>
<span class="s2">&quot;&quot;&quot;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">giriş</span><span class="p">)</span>

<span class="n">soru</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Yapmak istediğiniz işlemin numarasını girin: &quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>Bu kodları çalıştırdığımızda, ekranda giriş paragrafımız görünecek ve
kullanıcıya, yapmak istediği işlemin ne olduğu sorulacaktır. Henüz kodlarımız
eksik olduğu için, kullanıcı hangi sayıyı girerse girsin, programımız hiç bir iş
yapmadan kapanacaktır. O halde yolumuza devam edelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span><span class="p">:</span>
</pre></div>
</div>
<p>Böylece ilk <code class="docutils literal notranslate"><span class="pre">if</span></code> deyimimizi tanımlamış olduk. Buradaki yazım şekline çok
dikkat edin. Bu kodlarla Python’a şu emri vermiş oluyoruz:</p>
<blockquote>
<div><p>Eğer <cite>soru</cite> adlı değişkenin değeri <cite>1</cite> ise, yani eğer kullanıcı klavyede <cite>1</cite>
tuşuna basarsa…</p>
</div></blockquote>
<p><code class="docutils literal notranslate"><span class="pre">if</span></code> deyimlerinin en sonuna <cite>:</cite> işaretini koymayı unutmuyoruz. Python’a yeni
başlayanların en çok yaptığı hatalardan birisi, sondaki bu <cite>:</cite> işaretini koymayı
unutmalarıdır. Bu işaret bize çok ufak bir ayrıntıymış gibi görünse de Python
için manevi değeri çok büyüktür! Python’un bize öfkeli mesajlar göstermesini
istemiyorsak bu işareti koymayı unutmayacağız. Bu arada, burada <cite>==</cite> işaretini
kullandığımıza da dikkat edin. Bunun ne anlama geldiğini önceki derslerimizde
öğrenmiştik. Bu işaret, iki şeyin aynı değere sahip olup olmadığını
sorgulamamızı sağlıyor. Biz burada <cite>soru</cite> adlı değişkenin değerinin <cite>1</cite> olup
olmadığını sorguladık. <cite>soru</cite> değişkeninin değeri kullanıcı tarafından
belirleneceği için henüz bu değişkenin değerinin ne olduğunu bilmiyoruz. Bizim
programımızda kullanıcı klavyeden <cite>1</cite>, <cite>2</cite>, <cite>3</cite>, <cite>4</cite>, <cite>5</cite> veya <cite>6</cite> değerlerinden
herhangi birini seçebilir. Biz yukarıdaki kod yardımıyla, eğer kullanıcı
klavyede <cite>1</cite> tuşuna basarsa ne yapılacağını belirleyeceğiz. O halde devam
edelim:</p>
<div class="highlight-python3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span><span class="p">:</span>
    <span class="n">sayı1</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Toplama işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı2</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Toplama işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı1</span><span class="p">,</span> <span class="s2">&quot;+&quot;</span><span class="p">,</span> <span class="n">sayı2</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı1</span> <span class="o">+</span> <span class="n">sayı2</span><span class="p">)</span>
</pre></div>
</div>
<p>Böylece ilk <code class="docutils literal notranslate"><span class="pre">if</span></code> bloğumuzu tanımlamış olduk.</p>
<p><code class="docutils literal notranslate"><span class="pre">if</span></code> deyimimizi yazdıktan sonra ne yaptığımız çok önemli. Buradaki
girintileri, programımız güzel görünsün diye yapmıyoruz. Bu girintilerin Python
için bir anlamı var. Eğer bu girintileri vermezsek programımız çalışmayacaktır.
Eğer Python kodlarına duyarlı bir metin düzenleyici kullanıyorsanız, <cite>:</cite>
işaretini koyup <cite>Enter</cite> tuşuna bastıktan sonra otomatik olarak girinti
verilecektir. Eğer kullandığınız metin düzenleyici size böyle bir kolaylık
sunmuyorsa <cite>Enter</cite> tuşuna bastıktan sonra klavyedeki boşluk (<cite>SPACE</cite>) tuşunu
kullanarak dört vuruşluk bir girinti oluşturabilirsiniz. Bu girintiler, ilk
satırda belirlediğimiz <code class="docutils literal notranslate"><span class="pre">if</span></code> deyimiyle gösterilecek işlemlere işaret ediyor.
Dolayısıyla burada yazılan kodları Pythoncadan Türkçeye çevirecek olursak şöyle
bir şey elde ederiz:</p>
<div class="highlight-none notranslate"><div class="highlight"><pre><span></span>eğer sorunun değeri &#39;1&#39; ise:
    Toplama işlemi için ilk sayı girilsin. Bu değere &#39;sayı1&#39; diyelim.
    Sonra ikinci sayı girilsin. Bu değere de &#39;sayı2&#39; diyelim.
    En son, &#39;sayı1&#39;, &#39;+&#39; işleci, &#39;sayı2&#39;, &#39;=&#39; işleci ve &#39;sayı1 + sayı2&#39;
    ekrana yazdırılsın...
</pre></div>
</div>
<p>Gelin isterseniz buraya kadar olan bölümü yine topluca görelim:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">giriş</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">(1) topla</span>
<span class="s2">(2) çıkar</span>
<span class="s2">(3) çarp</span>
<span class="s2">(4) böl</span>
<span class="s2">(5) karesini hesapla</span>
<span class="s2">(6) karekök hesapla</span>
<span class="s2">&quot;&quot;&quot;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">giriş</span><span class="p">)</span>

<span class="n">soru</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Yapmak istediğiniz işlemin numarasını girin: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span><span class="p">:</span>
    <span class="n">sayı1</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Toplama işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı2</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Toplama işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı1</span><span class="p">,</span> <span class="s2">&quot;+&quot;</span><span class="p">,</span> <span class="n">sayı2</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı1</span> <span class="o">+</span> <span class="n">sayı2</span><span class="p">)</span>
</pre></div>
</div>
<p>Bu kodları çalıştırıp, klavyede <cite>1</cite> tuşuna bastığımızda, bizden bir sayı
girmemiz istenecektir. İlk sayımızı girdikten sonra bize tekrar bir sayı
girmemiz söylenecek. Bu emre de uyup <cite>Enter</cite> tuşuna basınca, girdiğimiz bu iki
sayının toplandığını göreceğiz. Fena sayılmaz, değil mi?</p>
<p>Şimdi programımızın geri kalan kısmını yazıyoruz. İşin temelini kavradığımıza
göre birden fazla kod bloğunu aynı anda yazabiliriz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span><span class="p">:</span>
    <span class="n">sayı3</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çıkarma işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı4</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çıkarma işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı3</span><span class="p">,</span> <span class="s2">&quot;-&quot;</span><span class="p">,</span> <span class="n">sayı4</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı3</span> <span class="o">-</span> <span class="n">sayı4</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;3&quot;</span><span class="p">:</span>
    <span class="n">sayı5</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çarpma işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı6</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çarpma işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı5</span><span class="p">,</span> <span class="s2">&quot;x&quot;</span><span class="p">,</span> <span class="n">sayı6</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı5</span> <span class="o">*</span> <span class="n">sayı6</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;4&quot;</span><span class="p">:</span>
    <span class="n">sayı7</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Bölme işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı8</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Bölme işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı7</span><span class="p">,</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="n">sayı8</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı7</span> <span class="o">/</span> <span class="n">sayı8</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;5&quot;</span><span class="p">:</span>
    <span class="n">sayı9</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Karesini hesaplamak istediğiniz sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı9</span><span class="p">,</span> <span class="s2">&quot;sayısının karesi =&quot;</span><span class="p">,</span> <span class="n">sayı9</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;6&quot;</span><span class="p">:</span>
    <span class="n">sayı10</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Karekökünü hesaplamak istediğiniz sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı10</span><span class="p">,</span> <span class="s2">&quot;sayısının karekökü = &quot;</span><span class="p">,</span> <span class="n">sayı10</span> <span class="o">**</span> <span class="mf">0.5</span><span class="p">)</span>
</pre></div>
</div>
<p>Bunlarla birlikte kodlarımızın büyük bölümünü tamamlamış oluyoruz. Bu bölümdeki
tek fark, ilk <code class="docutils literal notranslate"><span class="pre">if</span></code> bloğunun aksine, burada <code class="docutils literal notranslate"><span class="pre">elif</span></code> bloklarını kullanmış
olmamız. Eğer burada bütün blokları <code class="docutils literal notranslate"><span class="pre">if</span></code> kullanarak yazarsanız, biraz sonra
kullanacağımız <code class="docutils literal notranslate"><span class="pre">else</span></code> bloğu her koşulda çalışacağı için beklentinizin dışında
sonuçlar elde edersiniz.</p>
<p>Yukarıdaki kodlarda az da olsa farklılık gösteren tek yer son iki <code class="docutils literal notranslate"><span class="pre">elif</span></code>
bloğumuz. Esasında buradaki fark da pek büyük bir fark sayılmaz. Neticede tek
bir sayının karesini ve karekökünü hesaplayacağımız için, kullanıcıdan yalnızca
tek bir giriş istiyoruz.</p>
<p>Şimdi de son bloğumuzu yazalım. Az evvel çıtlattığımız gibi, bu son blok bir
<code class="docutils literal notranslate"><span class="pre">else</span></code> bloğu olacak:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Yanlış giriş.&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Aşağıdaki seçeneklerden birini giriniz:&quot;</span><span class="p">,</span> <span class="n">giriş</span><span class="p">)</span>
</pre></div>
</div>
<p>Çok basit bir <code class="docutils literal notranslate"><span class="pre">else</span></code> bloğu ile işimizi bitirdik. Bu bloğun ne işe yaradığını
biliyorsunuz:</p>
<blockquote>
<div><p>Eğer kullanıcının girdiği değer yukarıdaki bloklardan hiç birine uymuyorsa
bu <cite>else</cite> bloğunu işlet!</p>
</div></blockquote>
<p>gibi bir emir vermiş oluyoruz bu <code class="docutils literal notranslate"><span class="pre">else</span></code> bloğu yardımıyla. Mesela kullanıcımız
<cite>1</cite>, <cite>2</cite>, <cite>3</cite>, <cite>4</cite>, <cite>5</cite> veya <cite>6</cite> seçeneklerini girmek yerine <cite>7</cite> yazarsa, bu
blok işletilecek.</p>
<p>Gelin isterseniz son kez kodlarımızı topluca bir görelim:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">giriş</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">(1) topla</span>
<span class="s2">(2) çıkar</span>
<span class="s2">(3) çarp</span>
<span class="s2">(4) böl</span>
<span class="s2">(5) karesini hesapla</span>
<span class="s2">(6) karekök hesapla</span>
<span class="s2">&quot;&quot;&quot;</span>

<span class="nb">print</span><span class="p">(</span><span class="n">giriş</span><span class="p">)</span>

<span class="n">soru</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Yapmak istediğiniz işlemin numarasını girin: &quot;</span><span class="p">)</span>

<span class="k">if</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;1&quot;</span><span class="p">:</span>
    <span class="n">sayı1</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Toplama işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı2</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Toplama işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı1</span><span class="p">,</span> <span class="s2">&quot;+&quot;</span><span class="p">,</span> <span class="n">sayı2</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı1</span> <span class="o">+</span> <span class="n">sayı2</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;2&quot;</span><span class="p">:</span>
    <span class="n">sayı3</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çıkarma işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı4</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çıkarma işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı3</span><span class="p">,</span> <span class="s2">&quot;-&quot;</span><span class="p">,</span> <span class="n">sayı4</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı3</span> <span class="o">-</span> <span class="n">sayı4</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;3&quot;</span><span class="p">:</span>
    <span class="n">sayı5</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çarpma işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı6</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Çarpma işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı5</span><span class="p">,</span> <span class="s2">&quot;x&quot;</span><span class="p">,</span> <span class="n">sayı6</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı5</span> <span class="o">*</span> <span class="n">sayı6</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;4&quot;</span><span class="p">:</span>
    <span class="n">sayı7</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Bölme işlemi için ilk sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="n">sayı8</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Bölme işlemi için ikinci sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı7</span><span class="p">,</span> <span class="s2">&quot;/&quot;</span><span class="p">,</span> <span class="n">sayı8</span><span class="p">,</span> <span class="s2">&quot;=&quot;</span><span class="p">,</span> <span class="n">sayı7</span> <span class="o">/</span> <span class="n">sayı8</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;5&quot;</span><span class="p">:</span>
    <span class="n">sayı9</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Karesini hesaplamak istediğiniz sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı9</span><span class="p">,</span> <span class="s2">&quot;sayısının karesi =&quot;</span><span class="p">,</span> <span class="n">sayı9</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>

<span class="k">elif</span> <span class="n">soru</span> <span class="o">==</span> <span class="s2">&quot;6&quot;</span><span class="p">:</span>
    <span class="n">sayı10</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s2">&quot;Karekökünü hesaplamak istediğiniz sayıyı girin: &quot;</span><span class="p">))</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">sayı10</span><span class="p">,</span> <span class="s2">&quot;sayısının karekökü = &quot;</span><span class="p">,</span> <span class="n">sayı10</span> <span class="o">**</span> <span class="mf">0.5</span><span class="p">)</span>

<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Yanlış giriş.&quot;</span><span class="p">)</span>
    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Aşağıdaki seçeneklerden birini giriniz:&quot;</span><span class="p">,</span> <span class="n">giriş</span><span class="p">)</span>
</pre></div>
</div>
<p>Genel olarak baktığımızda, bütün programın aslında basit bir ‘if, elif, else’
yapısından ibaret olduğunu görüyoruz. Ayrıca bu kodlardaki simetriye de
dikkatinizi çekmek isterim. Gördüğünüz gibi her ‘paragraf’ bir <code class="docutils literal notranslate"><span class="pre">if</span></code>, <code class="docutils literal notranslate"><span class="pre">elif</span></code>
veya <code class="docutils literal notranslate"><span class="pre">else</span></code> bloğundan oluşuyor ve her blok kendi içinde girintili bir yapı
sergiliyor. Temel olarak şöyle bir şeyle karşı karşıyayız:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">Eğer</span> <span class="n">böyle</span> <span class="n">bir</span> <span class="n">durum</span> <span class="n">varsa</span><span class="p">:</span>
    <span class="n">şöyle</span> <span class="n">bir</span> <span class="n">işlem</span> <span class="n">yap</span>

<span class="n">Yok</span> <span class="n">eğer</span> <span class="n">şöyle</span> <span class="n">bir</span> <span class="n">durum</span> <span class="n">varsa</span><span class="p">:</span>
    <span class="n">böyle</span> <span class="n">bir</span> <span class="n">işlem</span> <span class="n">yap</span>

<span class="n">Eğer</span> <span class="n">bambaşka</span> <span class="n">bir</span> <span class="n">durum</span> <span class="n">varsa</span><span class="p">:</span>
    <span class="n">şöyle</span> <span class="n">bir</span> <span class="n">şey</span> <span class="n">yap</span>
</pre></div>
</div>
<p>Böylelikle şirin bir hesap makinesine sahip olmuş olduk! Hesap makinemiz pek
yetenekli değil, ama olsun… Henüz bildiklerimiz bunu yapmamıza müsaade ediyor.
Yine de başlangıçtan bu noktaya kadar epey yol katettiğimizi görüyorsunuz.</p>
<p>Şimdi bu programı çalıştırın ve neler yapabildiğine göz atın. Bu arada kodları
da iyice inceleyin. Programı yeterince anladıktan sonra, program üzerinde
kendinize göre bazı değişiklikler yapın, yeni özellikler ekleyin.
Eksikliklerini, zayıf yönlerini bulmaya çalışın. Böylece bu dersten azami
faydayı sağlamış olacaksınız.</p>
</section>
<section id="surume-gore-islem-yapan-program">
<h3>Sürüme Göre İşlem Yapan Program</h3>
<p>Bildiğiniz gibi, şu anda piyasada iki farklı Python serisi bulunuyor: Python2 ve
Python3. Daha önce de söylediğimiz gibi, Python’ın 2.x serisi ile çalışan bir
program Python’ın 3.x serisi ile muhtemelen çalışmayacaktır. Aynı şekilde bunun
tersi de geçerlidir. Yani 3.x ile çalışan bir program 2.x ile büyük ihtimalle
çalışmayacaktır.</p>
<p>Bu durum, yazdığınız programların farklı Python sürümleri ile çalıştırılma
ihtimaline karşı bazı önlemler almanızı gerektirebilir. Örneğin yazdığınız bir
programda kullanıcılarınızdan beklentiniz, programınızı Python’ın 3.x
sürümlerinden biri ile çalıştırmaları olabilir. Eğer programınız Python’ın 2.x
sürümlerinden biri ile çalıştırılırsa kullanıcıya bir uyarı mesajı göstermek
isteyebilirsiniz.</p>
<p>Hatta yazdığınız bir program, aynı serinin farklı sürümlerinde dahi çalışmayı
engelleyecek özellikler içeriyor olabilir. Örneğin <code class="docutils literal notranslate"><span class="pre">print()</span></code> fonksiyonunun
<cite>flush</cite> adlı parametresi dile <cite>3.3</cite> sürümü ile birlikte eklendi. Dolayısıyla bu
parametreyi kullanan bir program, kullanıcının <cite>3.3</cite> veya daha yüksek bir Python
sürümü kullanmasını gerektirir. Böyle bir durumda, programınızı çalıştıran
Python sürümünün en düşük <cite>3.3</cite> olmasını temin etmeniz gerekir.</p>
<p>Peki bunu nasıl yapacaksınız?</p>
<p>Burada aklınızda ilk olarak, kodlarınıza <cite>#!/usr/bin/env python3.3</cite> veya <cite>#!
python3.3</cite> gibi bir satır eklemek gelmiş olabilir. Ama unutmayın, bu çözüm ancak
kısıtlı bir işlevsellik sunabilir. Programımıza böyle bir satır eklediğimizde,
programımızın Python’ın <cite>3.3</cite> sürümü ile çalıştırılması gerektiğini belirtiyoruz.
Ama <cite>3.3</cite> dışı bir sürümle çalıştırıldığında ne olacağını belirtmiyoruz. Böyle
bir durumda, eğer programımız <cite>3.3</cite> dışı bir sürümle çalıştırılırsa çökecektir.
Bizim burada daha kapsamlı ve esnek bir çözüm bulmamız gerekiyor.</p>
<p>Hatırlarsanız önceki derslerden birinde <cite>sys</cite> adlı bir modülden söz etmiştik.
Bildiğiniz gibi, bu modül içinde pek çok yararlı değişken ve fonksiyon
bulunuyor. Önceki derslerimizde, bu modül içinde bulunan <code class="docutils literal notranslate"><span class="pre">exit()</span></code> fonksiyonu
ile <cite>stdout</cite> ve <cite>version</cite> değişkenlerini gördüğümüzü hatırlıyor olmalısınız.
<cite>sys</cite> modülü içinde bulunan <code class="docutils literal notranslate"><span class="pre">exit()</span></code> fonksiyonunun programdan çıkmamızı
sağladığını, <cite>stdout</cite> değişkeninin standart çıktı konumu bilgisini tuttuğunu ve
<cite>version</cite> değişkeninin de kullandığımız Python sürümü hakkında bilgi verdiğini
biliyoruz. İşte yukarıda bahsettiğimiz programda da bu <cite>sys</cite> modülünden
yararlanacağız.</p>
<p>Bu iş için, <cite>version</cite> değişkenine çok benzeyen <cite>version_info</cite> adlı bir
değişkeni kullanacağız.</p>
<p>Bu değişkenin nasıl kullanıldığına etkileşimli kabukta beraberce bakalım…</p>
<p><cite>sys</cite> modülü içindeki araçları kullanabilmek için öncelikle bu modülü içe
aktarmamız gerektiğini biliyorsunuz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">sys</span>
</pre></div>
</div>
<p>Şimdi de bu modül içindeki <cite>version_info</cite> adlı değişkene erişelim:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">sys</span><span class="o">.</span><span class="n">version_info</span>
</pre></div>
</div>
<p>Bu komut bize şöyle bir çıktı verir:</p>
<pre class="literal-block">sys.version_info(major=|major3|, minor=|minor3|, micro=|micro3|, releaselevel='final', serial=0)</pre>
<p>Gördüğünüz gibi, bu değişken de bize tıpkı <cite>version</cite> adlı değişken gibi,
kullandığımız Python sürümü hakkında bilgi veriyor.</p>
<p>Ben yukarıdaki komutu Python3’te verdiğinizi varsaydım. Eğer yukarıdaki komutu
Python3 yerine Python2’de verseydik şöyle bir çıktı alacaktık:</p>
<pre class="literal-block">sys.version_info(major=|major2|, minor=|minor2|, micro=|micro2|, releaselevel='final', serial=0)</pre>
<p><cite>version_info</cite> ve <cite>version</cite> değişkenlerinin verdikleri çıktının birbirlerinden
farklı yapıda olduğuna dikkat edin. <cite>version</cite> değişkeni, <cite>version_info</cite>
değişkeninden farklı olarak şöyle bir çıktı verir:</p>
<pre class="literal-block">'3.7.0 (default, 03 Eki 2021, 12:24:55)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on linux'</pre>
<p><cite>version_info</cite> değişkeninin verdiği çıktı bizim şu anda yazmak istediğimiz
programa daha uygun. Bunun neden böyle olduğunu biraz sonra siz de
anlayacaksınız.</p>
<p>Gördüğünüz gibi, <cite>version_info</cite> değişkeninin çıktısında <cite>major</cite> ve <cite>minor</cite> gibi
bazı değerler var. Çıktıdan da rahatlıkla anlayabileceğiniz gibi, <cite>major</cite>,
kullanılan Python serisinin ana sürüm numarasını; <cite>minor</cite> ise alt sürüm
numarasını verir. Çıktıda bir de <cite>micro</cite> adlı bir değer var. Bu da kullanılan
Python serisinin en alt sürüm numarasını verir.</p>
<p>Bu değere şu şekilde erişiyoruz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">major</span>
</pre></div>
</div>
<p>Öteki değerlere de aynı şekilde ulaşıyoruz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="gp">&gt;&gt;&gt; </span><span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">minor</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">micro</span>
</pre></div>
</div>
<p>İşte bu çıktılardaki <cite>major</cite> (ve yerine göre bununla birlikte <cite>minor</cite> ve
<cite>micro</cite>) değerini kullanarak, programımızın hangi Python sürümü ile
çalıştırılması gerektiğini kontrol edebiliriz. Şimdi programımızı yazalım:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">sys</span>

<span class="n">_2x_metni</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">Python&#39;ın 2.x sürümlerinden birini kullanıyorsunuz.</span>
<span class="s2">Programı çalıştırabilmek için sisteminizde Python&#39;ın</span>
<span class="s2">3.x sürümlerinden biri kurulu olmalı.&quot;&quot;&quot;</span>

<span class="n">_3x_metni</span> <span class="o">=</span> <span class="s2">&quot;Programa hoşgeldiniz.&quot;</span>

<span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">major</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">_2x_metni</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">_3x_metni</span><span class="p">)</span>
</pre></div>
</div>
<p>Gelin isterseniz öncelikle bu kodları biraz inceleyelim.</p>
<p>İlk olarak modülümüzü içe aktarıyoruz. Bu modül içindeki araçları
kullanabilmemiz için bunu yapmamız şart:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="kn">import</span> <span class="nn">sys</span>
</pre></div>
</div>
<p>Ardından Python’ın 2.x sürümlerinden herhangi birini kullananlar için bir uyarı
metni oluşturuyoruz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">_2x_metni</span> <span class="o">=</span> <span class="s2">&quot;&quot;&quot;</span>
<span class="s2">Python&#39;ın 2.x sürümlerinden birini kullanıyorsunuz.</span>
<span class="s2">Programı çalıştırabilmek için sisteminizde Python&#39;ın</span>
<span class="s2">3.x sürümlerinden biri kurulu olmalı.&quot;&quot;&quot;</span>
</pre></div>
</div>
<p>Bildiğiniz gibi Python’da değişken adları bir sayıyla başlamaz. O yüzden
değişken isminin başına bir tane alt çizgi işareti koyduğumuza dikkat edin.</p>
<p>Bu da Python3 kullanıcıları için:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">_3x_metni</span> <span class="o">=</span> <span class="s2">&quot;Programa hoşgeldiniz.&quot;</span>
</pre></div>
</div>
<p>Artık sürüm kontrolü kısmına geçebiliriz. Eğer major parametresinin değeri 3’ten
küçükse _2x_metnini yazdırıyoruz. Bunun dışındaki bütün durumlar için ise
_3x_metnini basıyoruz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">major</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">_2x_metni</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">_3x_metni</span><span class="p">)</span>
</pre></div>
</div>
<p>Gördüğünüz gibi, kullanılan Python sürümünü kontrol etmek ve eğer program
istenmeyen bir Python sürümüyle çalıştırılıyorsa ne yapılacağını belirlemek son
derece kolay.</p>
<p>Yukarıdaki çok basit bir kod parçası olsa da bize Python programlama diline ve bu
dilin farklı sürümlerine dair son derece önemli bazı bilgiler veriyor.</p>
<p>Eğer bu programı Python’ın 3.x sürümlerinden biri ile çalıştırdıysanız şu
çıktıyı alacaksınız:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">Programa</span> <span class="n">hoşgeldiniz</span><span class="o">.</span>
</pre></div>
</div>
<p>Ama eğer bu programı Python’ın 2.x sürümlerinden biri ile çalıştırdıysanız,
beklentinizin aksine, şöyle bir hata mesajı alacaksınız:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span>  <span class="n">File</span> <span class="s2">&quot;test.py&quot;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">5</span>
<span class="ne">SyntaxError</span><span class="p">:</span> <span class="n">Non</span><span class="o">-</span><span class="n">ASCII</span> <span class="n">character</span> <span class="s1">&#39;</span><span class="se">\xc4</span><span class="s1">&#39;</span> <span class="ow">in</span> <span class="n">file</span> <span class="n">test</span><span class="o">.</span><span class="n">py</span> <span class="n">on</span> <span class="n">line</span> <span class="mi">6</span><span class="p">,</span> <span class="n">but</span> <span class="n">no</span>
<span class="n">encoding</span> <span class="n">declared</span><span class="p">;</span> <span class="n">see</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">www</span><span class="o">.</span><span class="n">python</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">peps</span><span class="o">/</span><span class="n">pep</span><span class="o">-</span><span class="mf">0263.</span><span class="n">html</span> <span class="k">for</span> <span class="n">details</span>
</pre></div>
</div>
<p>Biz <cite>_2x_metni</cite> adlı değişkenin ekrana basılmasını beklerken Python bize bir
hata mesajı gösterdi. Aslında siz bu hata mesajına hiç yabancı değilsiniz. Bunu
daha önce de görmüştünüz. Hatırlarsanız önceki derslerimizde karakter
kodlamalarından bahsederken, Python’ın 2.x sürümlerinde öntanımlı karakter
kodlamasının ASCII olduğundan söz etmiştik. Bu yüzden programlarımızda Türkçe
karakterleri kullanırken bazı ilave işlemler yapmamız gerekiyordu.</p>
<p>Burada ilk olarak karakter kodlamasını <cite>UTF-8</cite> olarak değiştirmemiz gerekiyor.
Bunun nasıl yapılacağını biliyorsunuz. Programımızın ilk satırına şu kodu
ekliyoruz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="c1"># -*- coding: utf-8 -*-</span>
</pre></div>
</div>
<p>Bu satır Python3 için gerekli değil. Çünkü Python3’te öntanımlı karakter
kodlaması zaten <cite>UTF-8</cite>. Ama Python2’de öntanımlı karakter kodlaması <cite>ASCII</cite>. O
yüzden Python2 kullanıcılarını da düşünerek <cite>UTF-8</cite> kodlamasını açıkça
belirtiyoruz. Böylece programımızın Python’ın 2.x sürümlerinde Türkçe
karakterler yüzünden çökmesini önlüyoruz.</p>
<p>Ama burada bir problem daha var. Programımız Türkçe karakterler yüzünden
çökmüyor çökmemesine ama, bu defa da Türkçe karakterleri düzgün göstermiyor:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span>Python&#39;Ä±n 2.x sÃ¼rÃ¼mlerinden birini kullanÄ±yorsunuz.
ProgramÄ± Ã§alÄ±ÅŸtÄ±rabilmek iÃ§in sisteminizde Python&#39;Ä±n
3.x sÃ¼rÃ¼mlerinden biri kurulu olmalÄ±.
</pre></div>
</div>
<p>Programımızı Python’ın 2.x sürümlerinden biri ile çalıştıranların uyarı mesajını
düzgün bir şekilde görüntüleyebilmesini istiyorsanız, Türkçe karakterler içeren
karakter dizilerinin en başına bir ‘u’ harfi eklemelisiniz. Yani <cite>_2x_metni</cite>
adlı değişkeni şöyle yazmalısınız:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">_2x_metni</span> <span class="o">=</span> <span class="sa">u</span><span class="s2">&quot;&quot;&quot;</span>
<span class="s2">Python&#39;ın 2.x sürümlerinden birini kullanıyorsunuz.</span>
<span class="s2">Programı çalıştırabilmek için sisteminizde Python&#39;ın</span>
<span class="s2">3.x sürümlerinden biri kurulu olmalı.&quot;&quot;&quot;</span>
</pre></div>
</div>
<p>Bu karakter dizisinin en başına bir ‘u’ harfi ekleyerek bu karakter dizisini
‘unicode’ olarak tanımlamış olduk. Eğer ‘unicode’ kavramını bilmiyorsanız endişe
etmeyin. İlerde bu kavramdan bolca söz edeceğiz. Biz şimdilik, içinde Türkçe
karakterler geçen karakter dizilerinin Python2 kullanıcıları tarafından düzgün
görüntülenebilmesi için başlarına bir ‘u’ harfi eklenmesi gerektiğini bilelim
yeter.</p>
<p>Eğer siz bir Windows kullanıcısıysanız ve bütün bu işlemlerden sonra bile Türkçe
karakterleri düzgün görüntüleyemiyorsanız, bu durum muhtemelen MS-DOS komut
satırının kullandığı yazı tipinin Türkçe karakterleri gösterememesinden
kaynaklanıyordur. Bu problemi çözmek için MS-DOS komut satırının başlık çubuğuna
sağ tıklayıp ‘özellikler’ seçeneğini seçerek yazı tipini ‘Lucida Console’ olarak
değiştirin. Bu işlemin ardından da komut satırında şu komutu verin:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="n">chcp</span> <span class="mi">1254</span>
</pre></div>
</div>
<p>Böylece Türkçe karakterleri düzgün görüntüleyebilirsiniz.</p>
<div class="admonition note">
<p class="admonition-title">Not</p>
<p>MS-DOS’taki Türkçe karakter problemi hakkında daha ayrıntılı bilgi
için <a class="reference external" href="http://goo.gl/eRY1P">http://goo.gl/eRY1P</a> adresindeki makalemizi inceleyebilirsiniz.</p>
</div>
<p>Şimdiye kadar anlattıklarımızdan öğrendiğiniz gibi, <cite>sys</cite> modülü içinde sürüm
denetlemeye yarayan iki farklı değişken var. Bunlardan biri <cite>version</cite>, öbürü ise
<cite>version_info</cite>.</p>
<p>Python3’te bu değişkenlerin şu çıktıları verdiğiniz biliyoruz:</p>
<p><strong>version</strong>:</p>
<pre class="literal-block">'3.7.0 (default, 03 Eki 2021, 12:24:55)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on linux'</pre>
<p><strong>version_info</strong>:</p>
<pre class="literal-block">sys.version_info(major=|major3|, minor=|minor3|, micro=|micro3|, releaselevel='final', serial=0)</pre>
<p>Gördüğünüz gibi, çıktıların hem yapıları birbirinden farklı, hem de verdikleri
bilgiler arasında bazı farklar da var. Mesela <cite>version</cite> değişkeni, kullandığımız
Python sürümünün hangi tarih ve saatte, hangi işletim sistemi üzerinde
derlendiği bilgisini de veriyor. Ancak kullanılan Python sürümünün ne olduğunu
tespit etmek konusunda <cite>version_info</cite> biraz daha pratik görünüyor. Bu değişkenin
bize <cite>major</cite>, <cite>minor</cite> ve <cite>micro</cite> gibi parametreler aracılığıyla sunduğu sayı
değerli verileri işleçlerle birlikte kullanarak bu sayılar üzerinde aritmetik
işlemler yapıp, kullanılan Python sürümünü kontrol edebiliyoruz.</p>
<p><cite>version</cite> değişkeni bize bir karakter dizisi verdiği için, bu değişkenin
değerini kullanarak herhangi bir aritmetik işlem yapamıyoruz. Mesela
<cite>version_info</cite> değişkeniyle yukarıda yaptığımız büyüktür-küçüktür sorgulamasını
<cite>version</cite> değişkeniyle tabii ki yapamayız.</p>
<p>Yukarıdaki örnekte seriler arası sürüm kontrolünü nasıl yapacağımızı gördük.
Bunun için kullandığımız kod şuydu:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">major</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
    <span class="o">...</span>
</pre></div>
</div>
<p>Burada kullanılan Python serisinin <cite>3.x</cite>’ten düşük olduğu durumları sorguladık.
Peki aynı serinin farklı sürümlerini denetlemek istersek ne yapacağız? Mesela
Python’ın <cite>3.2</cite> sürümünü sorgulamak istersek nasıl bir kod kullanacağız?</p>
<p>Bunun için şöyle bir şey yazabiliriz:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">major</span> <span class="o">==</span> <span class="mi">3</span> <span class="ow">and</span> <span class="n">sys</span><span class="o">.</span><span class="n">version_info</span><span class="o">.</span><span class="n">minor</span> <span class="o">==</span> <span class="mi">2</span><span class="p">:</span>
    <span class="o">...</span>
</pre></div>
</div>
<p>Gördüğünüz gibi burada <cite>version_info</cite> değişkeninin hem <cite>major</cite> hem de <cite>minor</cite>
parametrelerini kullandık. Ayrıca hem ana sürüm, hem de alt sürüm için belli bir
koşul talep ettiğimizden ötürü <cite>and</cite> adlı Bool işlecinden de yararlandık. Çünkü
koşulun gerçekleşmesi, ana sürümün <cite>3</cite> <strong>ve</strong> alt sürümün <cite>2</cite> olmasına bağlı.</p>
<p>Yukarıdaki işlem için <cite>version</cite> değişkenini de kullanabilirdik. Dikkatlice
bakın:</p>
<div class="highlight-py3 notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="s2">&quot;3.2&quot;</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">version</span><span class="p">:</span>
    <span class="o">...</span>
</pre></div>
</div>
<p>Bildiğiniz gibi, <cite>version</cite> değişkeni Python’ın <cite>3.x</cite> sürümlerinde şuna benzer
bir çıktı veriyor:</p>
<pre class="literal-block">'3.7.0 (default, 03 Eki 2021, 12:24:55)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on linux'</pre>
<p>İşte biz burada <cite>in</cite> işlecini kullanarak, <cite>version</cite> değişkeninin verdiği
karakter dizisi içinde ‘3.2’ diye bir ifade aradık.</p>
<p>Bu konuyu daha iyi anlamak için kendi kendinize bazı denemeler yapmanızı tavsiye
ederim. Ne kadar çok örnek kod yazarsanız, o kadar çok tecrübe kazanırsınız.</p>
</section>
</section>
</section>



<div class='glyph'><a href='https://yazbel.com'>&#x2663;</a></div>
<div class='extrarelbar'> 
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>Gezinti</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="genindex.xhtml" title="Genel Dizin"
             accesskey="I">dizin</a></li>
        <li class="right" >
          <a href="donguler.xhtml" title="Döngüler (Loops)"
             accesskey="N">sonraki</a> |</li>
        <li class="right" >
          <a href="kosul_deyimleri.xhtml" title="Koşullu Durumlar"
             accesskey="P">önceki</a> |</li>
<li class="nav-item nav-item-0"><a href=".">&#x2302;</a></li>

        <li class="nav-item nav-item-this"><a href="">İşleçler</a></li> 
      </ul>
    </div> </div>

<div class='addcomment'>Yorumlar</div>

<div class='how-to-use'>
<h3>Önemli Not</h3>
Eğer yazdığınız yorum içinde kod kullanacaksanız kodlarınızı
<span class='tag'>&lt;pre&gt;&lt;code&gt;</span> etiketleri içine alın. Örneğin:

<pre>
    <span class='tag'>&lt;pre&gt;&lt;code class="python"&gt;</span>
    <span class='keyword'>print</span>(<span class='string'>"Merhaba Dünya!"</span>)
    <span class='tag'>&lt;/code&gt;&lt;/pre&gt;</span>
</pre>

Sorularınızı yorumlarda dile getirmek yerine <a href="https://forum.yazbel.com/">Yazbel Forumu</a>nda sorarsanız çok daha hızlı cevap alabilirsiniz.
</div>

<div id="disqus_thread"></div>
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'istihza';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>

<noscript>
<br>
<a href="https://disqus.com/?ref_noscript" rel="nofollow">Disqus tarafından sağlanan yorumları</a> görmek için lütfen JavasScript'i etkinleştirin.
<br>
Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a>
</noscript>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-4eca48eb2d83faf9" async="async"></script>



            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div> 
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>Gezinti</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="genindex.xhtml" title="Genel Dizin"
             >dizin</a></li>
        <li class="right" >
          <a href="donguler.xhtml" title="Döngüler (Loops)"
             >sonraki</a> |</li>
        <li class="right" >
          <a href="kosul_deyimleri.xhtml" title="Koşullu Durumlar"
             >önceki</a> |</li>
<li class="nav-item nav-item-0"><a href=".">&#x2302;</a></li>

        <li class="nav-item nav-item-this"><a href="">İşleçler</a></li> 
      </ul>
    </div> 

<div class="footer">
		&copy; Copyright 2021, Yazbel Belgelendirme Projesi | <a href="https://yazbel.com">yazbel.com</a>.
Son güncelleme: 03.10.2021.
	<a href="http://sphinx-doc.org/">Sphinx</a> 4.2.0 kullanılarak oluşturuldu.
<br>
<br>
<a rel="license" href="http://creativecommons.org/licenses/by-nc-sa/3.0/"><img
alt="Creative Commons License" style="border-width:0"
src="https://i.creativecommons.org/l/by-nc-sa/3.0/88x31.png" /></a>
<br>
<br>
</div>
<!-- Start of StatCounter Code for Default Guide -->
<script type="text/javascript">
var sc_project=10396326;
var sc_invisible=1;
var sc_security="fb5cd679";
var scJsHost = (("https:" == document.location.protocol) ?
"https://secure." : "http://www.");
document.write("<sc"+"ript type='text/javascript' src='" +
scJsHost+
"statcounter.com/counter/counter.js'></"+"script>");
</script>
<noscript><div class="statcounter"><a title="hit counter"
href="http://statcounter.com/" target="_blank"><img
class="statcounter"
src="http://c.statcounter.com/10396326/0/fb5cd679/1/"
alt="hit counter"></a></div></noscript>
<!-- End of StatCounter Code for Default Guide -->

  </body>
</html>